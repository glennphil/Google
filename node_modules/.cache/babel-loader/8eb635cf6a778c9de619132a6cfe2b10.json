{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google-front/src/components/SearchForm/index.js\";\nimport React from 'react';\nimport SearchBar from '../SearchBar/index';\nimport SearchButton from '../SearchButton/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Input\n\n    if (!fields[\"search_input\"]) {\n      formIsValid = false;\n      errors[\"search_input\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  searchSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"search\",\n        method: \"get\",\n        action: \"https://www.google.com/search\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/roqa/Documents/git/google-front/src/components/SearchForm/index.js"],"names":["React","SearchBar","SearchButton","SearchForm","Component","constructor","props","state","fields","errors","handleValidation","formIsValid","setState","searchSubmit","e","preventDefault","handleChange","field","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AACA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,gBAAgB,GAAE;AAChB,QAAIF,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIE,WAAW,GAAG,IAAlB,CAHgB,CAKhB;;AACA,QAAG,CAACH,MAAM,CAAC,cAAD,CAAV,EAA2B;AACzBG,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,MAAM,CAAC,cAAD,CAAN,GAAyB,iBAAzB;AACD;;AAED,SAAKG,QAAL,CAAc;AAACH,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACA,WAAOE,WAAP;AACD;;AAEDE,EAAAA,YAAY,CAACC,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQH,CAAR,EAAU;AACpB,QAAIN,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,IAAAA,MAAM,CAACS,KAAD,CAAN,GAAgBH,CAAC,CAACI,MAAF,CAASC,KAAzB;AACA,SAAKP,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd;AACD;;AAEDY,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,MAAM,EAAC,+BAAxC;AAAA,gCACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA5CmD","sourcesContent":["import React from 'react';\nimport SearchBar from '../SearchBar/index';\nimport SearchButton from '../SearchButton/index';\nexport default class SearchForm extends React.Component {\n    constructor(props){\n      super(props);\n  \n      this.state = {\n        fields: {},\n        errors: {}\n      }\n    }\n  \n    handleValidation(){\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n  \n      //Input\n      if(!fields[\"search_input\"]){\n        formIsValid = false;\n        errors[\"search_input\"] = \"Cannot be empty\";\n      }\n  \n      this.setState({errors: errors});\n      return formIsValid;\n    }\n  \n    searchSubmit(e){\n      e.preventDefault();\n    }\n  \n    handleChange(field, e){    \t\t\n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n  \n    render(){\n      return (\n        <div className=\"form-container\">\n            <form name=\"search\" method=\"get\" action=\"https://www.google.com/search\">\n            <SearchBar />\n            <SearchButton />\n            </form>\n        </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}