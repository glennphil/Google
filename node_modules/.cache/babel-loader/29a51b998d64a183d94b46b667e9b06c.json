{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { t } from 'i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FIRST_NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst LAST_NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nexport default function Register() {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [firstNameFocus, setFirstNameFocus] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n  const [lastNameFocus, setLastNameFocus] = useState(false);\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = FIRST_NAME_REGEX.test(firstName);\n    console.log(result);\n    console.log(firstName);\n    setValidFirstName(result);\n  }, [firstName]);\n  useEffect(() => {\n    const result = LAST_NAME_REGEX.test(lastName);\n    console.log(result);\n    console.log(lastName);\n    setValidFirstName(result);\n  }, [lastName]);\n  useEffect(() => {\n    setValidLastName(EMAIL_REGEX.test(email));\n  }, [email]);\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, pwd, matchPwd]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        spellCheck: \"false\",\n        dir: \"ltr\",\n        ref: userRef,\n        value: firstName,\n        className: \"signup-input\",\n        onChange: e => setFirstName(e.target.value),\n        required: true,\n        \"aria-invalid\": validFirstName ? \"false\" : \"true\",\n        onFocus: () => setFirstNameFocus(true),\n        onBlur: () => setFirstNameFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signup-input-placeholder\",\n        children: t(\"sign_up_first_name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: validFirstName || !firstName ? \"hide\" : \"invalid\",\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        spellCheck: \"false\",\n        dir: \"ltr\",\n        ref: userRef,\n        value: lastName,\n        className: \"signup-input\",\n        onChange: e => setLastName(e.target.value),\n        required: true,\n        \"aria-invalid\": validLastName ? \"false\" : \"true\",\n        onFocus: () => setLastNameFocus(true),\n        onBlur: () => setLastNameFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signup-input-placeholder\",\n        children: t(\"sign_up_last_name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: validLastName || !lastName ? \"hide\" : \"invalid\",\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"Q/GSTMHAANwXXtRVWiTt4xGiiLc=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/Register.jsx"],"names":["useRef","useState","useEffect","t","FIRST_NAME_REGEX","LAST_NAME_REGEX","EMAIL_REGEX","PWD_REGEX","Register","userRef","errRef","firstName","setFirstName","validFirstName","setValidFirstName","firstNameFocus","setFirstNameFocus","lastName","setLastName","validLastName","setValidLastName","lastNameFocus","setLastNameFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport { t } from 'i18next';\n\nconst FIRST_NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst LAST_NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst EMAIL_REGEX =/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\nexport default function Register () {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [firstNameFocus, setFirstNameFocus] = useState(false);\n\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n  const [lastNameFocus, setLastNameFocus] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, [])\n\n  useEffect(() => {\n    const result = FIRST_NAME_REGEX.test(firstName);\n    console.log(result);\n    console.log(firstName);\n    setValidFirstName(result);\n  }, [firstName])\n\n  useEffect(() => {\n    const result = LAST_NAME_REGEX.test(lastName);\n    console.log(result);\n    console.log(lastName);\n    setValidFirstName(result);\n  }, [lastName])\n\n  useEffect(() => {\n    setValidLastName(EMAIL_REGEX.test(email));\n  }, [email])\n\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, pwd, matchPwd])\n\n  return (\n    <>\n      <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n      <form className=\"signup-form\">\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          spellCheck=\"false\"\n          dir=\"ltr\"\n          ref={userRef}\n          value={firstName}\n          className=\"signup-input\"\n          onChange={(e) => setFirstName(e.target.value)}\n          required\n          aria-invalid={validFirstName ? \"false\" : \"true\"}\n          onFocus={() => setFirstNameFocus(true)}\n          onBlur={() => setFirstNameFocus(false)}\n        />\n        <span className=\"signup-input-placeholder\">\n          {t(\"sign_up_first_name\")}\n        </span>\n        <span className={validFirstName || !firstName ? \"hide\" : \"invalid\"} >False</span>\n      </form>\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          spellCheck=\"false\"\n          dir=\"ltr\"\n          ref={userRef}\n          value={lastName}\n          className=\"signup-input\"\n          onChange={(e) => setLastName(e.target.value)}\n          required\n          aria-invalid={validLastName ? \"false\" : \"true\"}\n          onFocus={() => setLastNameFocus(true)}\n          onBlur={() => setLastNameFocus(false)}\n        />\n        <span className=\"signup-input-placeholder\">\n          {t(\"sign_up_last_name\")}\n        </span>\n        <span className={validLastName || !lastName ? \"hide\" : \"invalid\"} >False</span>\n      </form>\n\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}