{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Name/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Name() {\n  _s();\n\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$firstName4, _errors$firstName5;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: ''\n  });\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Changes to your name will be reflected across your Google Account. \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CHANGE NAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"firstName\",\n          type: \"text\",\n          value: value.firstName,\n          onChange: handleChange,\n          className: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" || ((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"maxLength\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"validate\" || ((_errors$firstName5 = errors.firstName) === null || _errors$firstName5 === void 0 ? void 0 : _errors$firstName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"firstName\",\n        placeholder: firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/myaccount\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Name, \"MiA0sa11BwcM0PB0RIn172LwUNY=\", false, function () {\n  return [useForm];\n});\n\n_c = Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Name/index.jsx"],"names":["Link","useForm","useState","Name","register","handleSubmit","watch","formState","errors","defaultValues","firstName","lastName","email","password","passwordConfirm","month","gender","day","year","mode","reValidateMode","delayError","value","setValue","obj","JSON","parse","localStorage","getItem","letter","charAt","toUpperCase","URL","onSubmit","required","minLength","maxLength","pattern","validate","trim","handleChange","type"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\n\nexport default function Name() {\n  const {register, handleSubmit, watch, formState: { errors }} = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: '',\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: '',\n  })\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n\n  return (\n    <>\n    <h1>Name</h1>\n    <p>Changes to your name will be reflected across your Google Account.\n      &nbsp;<a>Learn more</a>\n    </p>\n\n    <h3>CHANGE NAME</h3>\n    <form onSubmit={handleSubmit(onSubmit)} noValidate>\n    <div className=\"input-container\">\n          <input \n            {...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"firstName\"\n            type=\"text\"\n            value={value.firstName}\n            onChange={handleChange}\n            className={(\n              errors.firstName?.type === \"pattern\" ||\n              errors.firstName?.type === \"minLength\" ||\n              errors.firstName?.type === \"maxLength\" ||\n              errors.firstName?.type === \"validate\" ||\n              errors.firstName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.firstName ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            \n          </span>\n        </div>\n      <input value=\"firstName\" placeholder={firstName}>\n      </input>\n      <input placeholder={lastName}>\n      </input>\n      <button>\n        <Link to=\"/myaccount\">\n          Cancel\n        </Link>\n      </button>\n      <button type=\"submit\">Save</button>\n    </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}