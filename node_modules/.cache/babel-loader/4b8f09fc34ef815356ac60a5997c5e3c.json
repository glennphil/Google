{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }\n  });\n\n  const onSubmit = data => console.log(data);\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/;\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/;\n  const onlyAtRegex = /^@$/;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          validate: {\n            noUsername: value => noUsernameRegex.test(value) ? true : false,\n            onlyCharacters: value => onlyCharactersRegex.test(value) ? true : false,\n            onlyAt: value => onlyAtRegex.test(value) ? true : false\n          }\n        }),\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"noUsername\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 47\n      }, this), ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"onlyCharacters\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add an '@'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 51\n      }, this), ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyAt\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ONLY AT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst DisplayErrors = _ref => {\n  var _errors$firstName, _errors$lastName, _errors$firstName2, _errors$lastName2, _errors$firstName3, _errors$lastName3, _errors$firstName4, _errors$lastName4;\n\n  let {\n    errors\n  } = _ref;\n\n  if (errors.firstName && errors.lastName || ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"validate\" && ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"validate\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" && ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first and last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"pattern\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Are you sure you entered your name correctly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = DisplayErrors;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"DisplayErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["useForm","Register","register","handleSubmit","formState","errors","defaultValues","firstName","lastName","email","onSubmit","data","console","log","noUsernameRegex","onlyCharactersRegex","onlyAtRegex","required","minLength","maxLength","pattern","validate","value","trim","noUsername","test","onlyCharacters","onlyAt","type","DisplayErrors"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\n\nexport default function Register() {\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }\n  });\n\n  const onSubmit = data => console.log(data);\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/;\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/;\n  const onlyAtRegex = /^@$/;\n\n  return (\n    <>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"name-row\">\n      <input \n        {...register(\"firstName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"firstName\"\n        type=\"text\"\n      />\n      <input \n        {...register(\"lastName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"lastName\"\n        type=\"text\"\n      />\n      </div>\n      <DisplayErrors errors={errors}/>\n      <input \n        {...register(\"email\", {\n        required: true,\n\n\n        validate: {\n          noUsername: (value) => noUsernameRegex.test(value) ? true : false,\n          onlyCharacters: (value) => onlyCharactersRegex.test(value) ? true : false,\n          onlyAt: (value) => onlyAtRegex.test(value) ? true : false\n        }\n        })}\n        name=\"email\"\n        type=\"email\"\n      />\n      {errors.email?.type === \"required\" && <span>Enter your email</span>}\n      {errors.email?.type === \"noUsername\" && <span>Enter username</span>}\n      {errors.email?.type !== \"onlyCharacters\" && <span>Add an '@'</span>}\n\n      {errors.email?.type !== \"onlyAt\" && <span>ONLY AT</span>}\n      <input type=\"submit\"/>\n\n    </form>\n    </>\n  )\n}\n\nconst DisplayErrors = ({ errors }) => {\n  if ((errors.firstName && errors.lastName) || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div>Enter first and last name</div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div>Are you sure you entered your name correctly?</div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div>Enter first name</div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div>Enter last name</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}