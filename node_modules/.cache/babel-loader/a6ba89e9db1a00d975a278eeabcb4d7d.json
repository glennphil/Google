{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google-front/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\nimport './index.css'; // import App from './App';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  // the translations\n  // (tip move them in a JSON file and import them,\n  // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n  fallbackLng: \"en\",\n  detection: {\n    order: ['htmlTag', 'cookie', 'localStorage', 'path', 'subdomain'],\n    caches: ['cookie']\n  },\n  backend: {\n    loadPath: '/assets/locales/{{lng}}/translation.json'\n  },\n  react: {\n    useSuspense: false\n  }\n});\n\nfunction App() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: t('Welcome to React')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google-front/src/index.js"],"names":["React","ReactDOM","i18n","useTranslation","initReactI18next","LanguageDetector","HttpApi","use","init","fallbackLng","detection","order","caches","backend","loadPath","react","useSuspense","App","t","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,aAAP,C,CACA;;;AAEAJ,IAAI,CACDK,GADH,CACOH,gBADP,EACyB;AADzB,CAEGG,GAFH,CAEOF,gBAFP,EAGGE,GAHH,CAGOD,OAHP,EAIGE,IAJH,CAIQ;AACJ;AACA;AACA;AACAC,EAAAA,WAAW,EAAE,IAJT;AAKJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,cAAtB,EAAsC,MAAtC,EAA8C,WAA9C,CADE;AAETC,IAAAA,MAAM,EAAE,CAAC,QAAD;AAFC,GALP;AASJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GATL;AAYJC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAZH,CAJR;;AAmBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AAEA,sBAAO;AAAA,cAAKe,CAAC,CAAC,kBAAD;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAJQD,G;UACOd,c;;;KADPc,G;AAMThB,QAAQ,CAACkB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\n\nimport './index.css';\n// import App from './App';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .use(HttpApi)\n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    fallbackLng: \"en\",\n    detection: {\n      order: ['htmlTag', 'cookie', 'localStorage', 'path', 'subdomain'],\n      caches: ['cookie'],\n    },\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/translation.json',\n    },\n    react: { useSuspense: false }\n  });\n\nfunction App() {\n  const { t } = useTranslation();\n\n  return <h2>{t('Welcome to React')}</h2>;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}