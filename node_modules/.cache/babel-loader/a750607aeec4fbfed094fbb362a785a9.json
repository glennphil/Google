{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\nimport AccountFooter from \"../../../components/AccountFooter\";\nimport AccountHeader from \"../Header\";\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Email() {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: ''\n  });\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-bord-bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account-page-row-blue\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"account-flex-form-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(SubHeadNote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"account-flex-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"birthday-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 7\n            }, this), \"PencilIcon\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Change Google Account email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n                  required: true,\n                  validate: {\n                    noUsername: value => noUsernameRegex.test(value) ? false : true,\n                    // @domain //\n                    noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n                    // @domain. //\n                    onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n                    // abcdefg //\n                    validEmail: value => validEmailRegex.test(value) ? true : false,\n                    // user@domain.com //\n                    noDomain: value => noDomainRegex.test(value) ? false : true,\n                    // user@ //\n                    noAt: value => noAtRegex.test(value) ? false : true,\n                    // user. //\n                    noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n                    // user.com // \n                    emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n                  }\n                }),\n                autoComplete: \"off\",\n                name: \"email\",\n                type: \"email\",\n                value: value.email,\n                onChange: handleChange,\n                className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) !== \"validEmail\" && (((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) !== \"noUsername\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"noUsernameDot\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyCharacters\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) !== \"noDomain\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) !== \"required\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) !== \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) !== \"emptyString\" || ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"noAtWithTopDomain\") ? \"signup-input-error\" : \"signup-input\",\n                \"aria-invalid\": errors.email ? \"true\" : \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"signup-input-placeholder\",\n                children: \"New email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/myaccount/email/\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Email, \"MiA0sa11BwcM0PB0RIn172LwUNY=\", false, function () {\n  return [useForm];\n});\n\n_c = Email;\n\nconst SubHeading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"nav-contain-blue nav-contain-no-bord\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-form-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-subhead\",\n      children: [/*#__PURE__*/_jsxDEV(BackArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-subhead-text\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 3\n}, this);\n\n_c2 = SubHeading;\n\nconst SubHeadNote = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note subhead-note font-16\",\n  children: [\"The address used to identify your Google Account to you and others.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://support.google.com/accounts/answer/27442\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"learn-more\",\n    children: \"More information\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 148,\n  columnNumber: 3\n}, this);\n\n_c3 = SubHeadNote;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Email\");\n$RefreshReg$(_c2, \"SubHeading\");\n$RefreshReg$(_c3, \"SubHeadNote\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx"],"names":["Link","useForm","useState","BackArrow","Helmet","AccountFooter","AccountHeader","Email","register","handleSubmit","watch","formState","errors","defaultValues","firstName","lastName","email","password","passwordConfirm","month","gender","day","year","mode","reValidateMode","delayError","value","setValue","handleChange","e","target","name","obj","JSON","parse","localStorage","getItem","letter","charAt","toUpperCase","URL","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","required","validate","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","type","SubHeading","SubHeadNote"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\nimport AccountFooter from \"../../../components/AccountFooter\";\nimport AccountHeader from \"../Header\";\n\nimport '../style.css';\n\nexport default function Email() {\n  const {register, handleSubmit, watch, formState: { errors }} = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: '',\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: '',\n  })\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <>\n      <Helmet>\n        <title>Email</title>\n      </Helmet>\n      <AccountHeader />\n      <div className=\"form-bord-bot\" />\n      <section className=\"account-page-row-blue\">\n        <SubHeading />\n        <section className=\"account-flex-form-wrap\">\n          <SubHeadNote />\n          <section className=\"account-flex-form\">\n\n    <div className=\"birthday-row\">\n      <h3>{email}</h3>\n      PencilIcon\n    </div>\n\n    <h3>Change Google Account email</h3>\n    <form onSubmit={handleSubmit} noValidate>\n    <div className=\"input-container\">\n        <input \n          {...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n              noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n              onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n              validEmail: (value) => validEmailRegex.test(value) ? true : false, // user@domain.com //\n              noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n              noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n              noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n              emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n            }\n          })}\n          autoComplete=\"off\"\n          name=\"email\"\n          type=\"email\"\n          value={value.email}\n          onChange={handleChange}\n          className={errors.email?.type !== \"validEmail\" && (\n            errors.email?.type !== \"noUsername\" ||\n            errors.email?.type !== \"noUsernameDot\" ||\n            errors.email?.type !== \"onlyCharacters\" ||\n            errors.email?.type !== \"noDomain\" ||\n            errors.email?.type !== \"required\" ||\n            errors.email?.type !== \"noAt\" ||\n            errors.email?.type !== \"emptyString\" ||\n            errors.email?.type !== \"noAtWithTopDomain\")\n            ? \"signup-input-error\" : \"signup-input\"\n          }\n          aria-invalid={errors.email ? \"true\" : \"false\"}\n        />\n        <span className=\"signup-input-placeholder\">\n          New email\n        </span>\n      </div>\n       \n    </form>\n    <button>\n        <Link to=\"/myaccount/email/\">\n          Cancel\n        </Link>\n      </button>\n      <button type=\"submit\">Save</button>\n\n      </section>\n        </section>\n       </section>\n    </>\n  )\n}\n\nconst SubHeading = () => (\n  <div className=\"nav-contain-blue nav-contain-no-bord\">\n    <div className=\"navbar-form-wrap\">\n      <div className=\"account-subhead\">\n        <BackArrow />\n        <div className=\"account-subhead-text\">Email</div>\n      </div>\n    </div>\n  </div>\n)\n\nconst SubHeadNote = () => (\n  <div className=\"top-note subhead-note font-16\">\n    The address used to identify your Google Account to you and others.&nbsp;\n    <a href=\"https://support.google.com/accounts/answer/27442\" target=\"_blank\" rel=\"noreferrer\" className=\"learn-more\">More information</a>\n  </div>\n)"]},"metadata":{},"sourceType":"module"}