{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst noUsernameRegex = /^@\\w+([.-]?\\w+)*$/;\nconst onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/;\nexport default function Register() {\n  _s();\n\n  var _errors$email, _errors$email2;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          minLength: 8,\n          maxLength: 39,\n          pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          validate: {\n            trim: value => {\n              return !!value.trim();\n            },\n            noUsername: value => {\n              return noUsernameRegex.test(value);\n            },\n            onlyCharacters: value => onlyCharactersRegex.test(value)\n          }\n        }),\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this), ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"noUsername\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 47\n      }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"onlyCharacters\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add an '@'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst DisplayErrors = _ref => {\n  var _errors$firstName, _errors$lastName, _errors$firstName2, _errors$lastName2, _errors$firstName3, _errors$lastName3, _errors$firstName4, _errors$lastName4;\n\n  let {\n    errors\n  } = _ref;\n\n  if (errors.firstName && errors.lastName || ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"validate\" && ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"validate\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" && ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first and last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"pattern\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Are you sure you entered your name correctly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = DisplayErrors;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"DisplayErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["useForm","noUsernameRegex","onlyCharactersRegex","Register","register","handleSubmit","formState","errors","defaultValues","firstName","lastName","email","onSubmit","data","console","log","required","minLength","maxLength","pattern","validate","value","trim","noUsername","test","onlyCharacters","type","DisplayErrors"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\n\nconst noUsernameRegex = /^@\\w+([.-]?\\w+)*$/;\nconst onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/;\n\nexport default function Register() {\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return (\n    <>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"name-row\">\n      <input \n        {...register(\"firstName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"firstName\"\n        type=\"text\"\n      />\n      <input \n        {...register(\"lastName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"lastName\"\n        type=\"text\"\n      />\n      </div>\n      <DisplayErrors errors={errors}/>\n      <input \n        {...register(\"email\", {\n        required: true,\n        minLength: 8,\n        maxLength: 39,\n        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n        validate: {\n          trim: (value) => { return !!value.trim() },\n          noUsername: (value) => { return noUsernameRegex.test(value)},\n          onlyCharacters: (value) => onlyCharactersRegex.test(value)\n        }\n        })}\n        name=\"email\"\n        type=\"email\"\n      />\n      {errors.email && <span>Enter your email</span>}\n      {errors.email?.type === \"noUsername\" && <span>Enter username</span>}\n      {errors.email?.type === \"onlyCharacters\" && <span>Add an '@'</span>}\n      <input type=\"submit\"/>\n\n    </form>\n    </>\n  )\n}\n\nconst DisplayErrors = ({ errors }) => {\n  if ((errors.firstName && errors.lastName) || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div>Enter first and last name</div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div>Are you sure you entered your name correctly?</div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div>Enter first name</div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div>Enter last name</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}