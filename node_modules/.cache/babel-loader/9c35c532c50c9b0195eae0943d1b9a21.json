{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Password/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Password() {\n  _s();\n\n  var _errors$password, _errors$password2, _errors$password3, _errors$passwordConfi, _errors$passwordConfi2, _errors$passwordConfi3;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: ''\n  });\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n  const validPasswordRegex = /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/myaccount/personalinfo/\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Choose a strong password and don't reuse it for other accounts. \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              noSpaceStartOrEnd: value => noSpaceStartOrEndRegex.test(value) ? true : false,\n              validPassword: value => validPasswordRegex.test(value) ? true : false\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"password\",\n          id: \"password\",\n          type: \"password\",\n          onChange: handleChange,\n          className: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"minLength\" || ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"required\" || ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === \"noSpaceStartOrEnd\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.password ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              passwordConfirm: value => value === watch('password') ? true : false,\n              validPassword: value => validPasswordRegex.test(value) ? true : false\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"passwordConfirm\",\n          id: \"passwordConfirm\",\n          type: \"password\",\n          className: errors.password && (((_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.type) === \"minLength\" || ((_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.type) === \"required\" || ((_errors$passwordConfi3 = errors.passwordConfirm) === null || _errors$passwordConfi3 === void 0 ? void 0 : _errors$passwordConfi3.type) !== \"passwordConfirm\") ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.passwordConfirm ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Change password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Password, \"MiA0sa11BwcM0PB0RIn172LwUNY=\", false, function () {\n  return [useForm];\n});\n\n_c = Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Password/index.jsx"],"names":["Link","useForm","useState","Password","register","handleSubmit","watch","formState","errors","defaultValues","firstName","lastName","email","password","passwordConfirm","month","gender","day","year","mode","reValidateMode","delayError","value","setValue","handleChange","e","target","name","obj","JSON","parse","localStorage","getItem","letter","charAt","toUpperCase","URL","validPasswordRegex","emptyStringRegex","noSpaceStartOrEndRegex","required","minLength","validate","emptyString","test","noSpaceStartOrEnd","validPassword","type","t"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\n\nexport default function Password() {\n  const {register, handleSubmit, watch, formState: { errors }} = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      month: '',\n      gender: '',\n      day: '',\n      year: '',\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const [value, setValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    month: '',\n    gender: '',\n    day: '',\n    year: '',\n  })\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const letter = firstName.charAt(0).toUpperCase();\n  const URL = \"http://localhost:5000/users?email=\" + email;\n\n\n\n  const validPasswordRegex =  /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n\n  return (\n    <>\n    <button>\n      <Link to=\"/myaccount/personalinfo/\">\n        Back\n      </Link>\n    </button>\n    <h1>Password</h1>\n    <p>Choose a strong password and don't reuse it for other accounts.\n      &nbsp;<a>Learn more</a>\n    </p>\n\n    <form onSubmit={handleSubmit} noValidate>\n    <div className=\"input-container\">\n          <input \n            {...register(\"password\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                noSpaceStartOrEnd: (value) => noSpaceStartOrEndRegex.test(value) ? true : false,\n                validPassword: (value) => validPasswordRegex.test(value) ? true : false\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n\n            onChange={handleChange}\n            className={(\n              errors.password?.type === \"minLength\" ||\n              errors.password?.type === \"required\" ||\n              errors.password?.type === \"noSpaceStartOrEnd\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.password ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_password\")}\n          </span>\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"passwordConfirm\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                passwordConfirm: (value) => value === watch('password') ? true : false,\n                validPassword: (value) => validPasswordRegex.test(value) ? true : false\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"passwordConfirm\"\n            id=\"passwordConfirm\"\n            type=\"password\"\n            className={errors.password && (\n              errors.passwordConfirm?.type === \"minLength\" ||\n              errors.passwordConfirm?.type === \"required\" ||\n              errors.passwordConfirm?.type !== \"passwordConfirm\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.passwordConfirm ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_confirm\")}\n          </span>\n        </div>\n    </form>\n    <button type=\"submit\">Change password</button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}