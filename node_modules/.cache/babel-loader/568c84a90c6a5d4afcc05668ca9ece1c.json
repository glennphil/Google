{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/SignUp/Email/Form/index.jsx\";\nimport { ShowPassword } from '../../../../components/SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo } from '..';\nimport { t } from 'i18next';\nimport axios from 'axios';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$firstName4, _errors$firstName5, _errors$lastName, _errors$lastName2, _errors$lastName3, _errors$lastName4, _errors$lastName5, _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9, _errors$password, _errors$password2, _errors$password3, _errors$passwordConfi, _errors$passwordConfi2, _errors$passwordConfi3;\n\n  let {\n    value,\n    setValue,\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    onSubmit,\n    Next\n  } = _ref;\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(errors);\n  const validPasswordRegex = /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n\n  async function uniqueEmail(e) {\n    const response = await axios.get(\"http://localhost:5000/users/\");\n    const userInput = value.email.toLowerCase();\n\n    for (let i = 0; i < response.data.length; i++) {\n      if (response.data[i].email === userInput) {\n        console.log(\"email matches\");\n        return false;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"signup-form\",\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"firstName\",\n          type: \"text\",\n          value: value.firstName,\n          onChange: handleChange,\n          className: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" || ((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"maxLength\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"validate\" || ((_errors$firstName5 = errors.firstName) === null || _errors$firstName5 === void 0 ? void 0 : _errors$firstName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_first_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"lastName\",\n          type: \"text\",\n          value: value.lastName,\n          onChange: handleChange,\n          className: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" || ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"validate\" || ((_errors$lastName5 = errors.lastName) === null || _errors$lastName5 === void 0 ? void 0 : _errors$lastName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.lastName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_last_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          validate: {\n            noUsername: value => noUsernameRegex.test(value) ? false : true,\n            // @domain //\n            noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n            // @domain. //\n            onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n            // abcdefg //\n            validEmail: value => validEmailRegex.test(value) ? true : false,\n            // user@domain.com //\n            noDomain: value => noDomainRegex.test(value) ? false : true,\n            // user@ //\n            noAt: value => noAtRegex.test(value) ? false : true,\n            // user. //\n            noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n            // user.com // \n            emptyString: value => emptyStringRegex.test(value) ? false : true,\n            // ' ' //\n            checkEmail: async () => await uniqueEmail()\n          }\n        }),\n        autoComplete: \"off\",\n        name: \"email\",\n        type: \"email\",\n        value: value.email,\n        onChange: handleChange,\n        className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"validEmail\" && (((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"noUsername\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"noUsernameDot\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyCharacters\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) !== \"noDomain\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) !== \"required\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) !== \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) !== \"emptyString\" || ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"noAtWithTopDomain\") ? \"signup-input-error\" : \"signup-input\",\n        \"aria-invalid\": errors.email ? \"false\" : \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-input-placeholder\",\n        children: t(\"sign_up_email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              noSpaceStartOrEnd: value => noSpaceStartOrEndRegex.test(value) ? true : false,\n              validPassword: value => validPasswordRegex.test(value) ? true : false\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"password\",\n          id: \"password\",\n          type: \"password\",\n          onChange: handleChange,\n          className: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"minLength\" || ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"required\" || ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === \"noSpaceStartOrEnd\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.password ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              passwordConfirm: value => value === watch('password') ? true : false,\n              validPassword: value => validPasswordRegex.test(value) ? true : false\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"passwordConfirm\",\n          id: \"passwordConfirm\",\n          type: \"password\",\n          className: errors.password && (((_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.type) === \"minLength\" || ((_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.type) === \"required\" || ((_errors$passwordConfi3 = errors.passwordConfirm) === null || _errors$passwordConfi3 === void 0 ? void 0 : _errors$passwordConfi3.type) !== \"passwordConfirm\") ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.passwordConfirm ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordNote, {\n      value: value,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-row\",\n      children: [/*#__PURE__*/_jsxDEV(SignInInstead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = Form;\n\nconst NameErrors = _ref2 => {\n  var _errors$firstName6, _errors$lastName6, _errors$firstName7, _errors$lastName7, _errors$firstName8, _errors$lastName8, _errors$firstName9, _errors$lastName9, _errors$firstName10, _errors$lastName10;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$firstName6 = errors.firstName) === null || _errors$firstName6 === void 0 ? void 0 : _errors$firstName6.type) === \"required\" && ((_errors$lastName6 = errors.lastName) === null || _errors$lastName6 === void 0 ? void 0 : _errors$lastName6.type) === \"required\" || ((_errors$firstName7 = errors.firstName) === null || _errors$firstName7 === void 0 ? void 0 : _errors$firstName7.type) === \"validate\" && ((_errors$lastName7 = errors.lastName) === null || _errors$lastName7 === void 0 ? void 0 : _errors$lastName7.type) === \"validate\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first and last names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName8 = errors.firstName) === null || _errors$firstName8 === void 0 ? void 0 : _errors$firstName8.type) === \"pattern\" || ((_errors$lastName8 = errors.lastName) === null || _errors$lastName8 === void 0 ? void 0 : _errors$lastName8.type) === \"pattern\" || ((_errors$firstName9 = errors.firstName) === null || _errors$firstName9 === void 0 ? void 0 : _errors$firstName9.type) === \"maxLength\" || ((_errors$lastName9 = errors.lastName) === null || _errors$lastName9 === void 0 ? void 0 : _errors$lastName9.type) === \"maxLength\" || ((_errors$firstName10 = errors.firstName) === null || _errors$firstName10 === void 0 ? void 0 : _errors$firstName10.type) === \"minLength\" || ((_errors$lastName10 = errors.lastName) === null || _errors$lastName10 === void 0 ? void 0 : _errors$lastName10.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Are you sure you entered your name correctly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nconst EmailErrors = _ref3 => {\n  var _errors$email10, _errors$email11, _errors$email12;\n\n  let {\n    errors\n  } = _ref3;\n\n  if (((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) === \"required\" || ((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) === \"checkEmail\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a unique email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = EmailErrors;\n\nconst PasswordErrors = _ref4 => {\n  var _errors$password4, _errors$password5, _errors$passwordConfi4, _errors$password6, _errors$password7, _errors$passwordConfi5, _errors$password8, _errors$passwordConfi6, _errors$passwordConfi7, _errors$passwordConfi8, _errors$password9, _errors$password10;\n\n  let {\n    errors\n  } = _ref4;\n\n  if (((_errors$password4 = errors.password) === null || _errors$password4 === void 0 ? void 0 : _errors$password4.type) === \"required\" || ((_errors$password5 = errors.password) === null || _errors$password5 === void 0 ? void 0 : _errors$password5.type) === \"required\" && ((_errors$passwordConfi4 = errors.passwordConfirm) === null || _errors$passwordConfi4 === void 0 ? void 0 : _errors$passwordConfi4.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password6 = errors.password) === null || _errors$password6 === void 0 ? void 0 : _errors$password6.type) !== \"validPassword\" && ((_errors$password7 = errors.password) === null || _errors$password7 === void 0 ? void 0 : _errors$password7.type) !== \"minLength\" && ((_errors$passwordConfi5 = errors.passwordConfirm) === null || _errors$passwordConfi5 === void 0 ? void 0 : _errors$passwordConfi5.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Confirm your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password8 = errors.password) === null || _errors$password8 === void 0 ? void 0 : _errors$password8.type) !== \"validPassword\" && ((_errors$passwordConfi6 = errors.passwordConfirm) === null || _errors$passwordConfi6 === void 0 ? void 0 : _errors$passwordConfi6.type) !== \"required\" && ((_errors$passwordConfi7 = errors.passwordConfirm) === null || _errors$passwordConfi7 === void 0 ? void 0 : _errors$passwordConfi7.type) === \"passwordConfirm\" || ((_errors$passwordConfi8 = errors.passwordConfirm) === null || _errors$passwordConfi8 === void 0 ? void 0 : _errors$passwordConfi8.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Those passwords didn't match. Try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password9 = errors.password) === null || _errors$password9 === void 0 ? void 0 : _errors$password9.type) === \"noSpaceStartOrEnd\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Your password can't start or end with a blank space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password10 = errors.password) === null || _errors$password10 === void 0 ? void 0 : _errors$password10.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Use 8 characters or more for your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c4 = PasswordErrors;\n\nconst PasswordNote = _ref5 => {\n  let {\n    value,\n    errors\n  } = _ref5;\n\n  if (value.password === '' || value.passwordConfirm === '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-note\",\n      children: \"Use 8 or more characters with a mix of letters, numbers & symbols\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_c5 = PasswordNote;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"NameErrors\");\n$RefreshReg$(_c3, \"EmailErrors\");\n$RefreshReg$(_c4, \"PasswordErrors\");\n$RefreshReg$(_c5, \"PasswordNote\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/SignUp/Email/Form/index.jsx"],"names":["ShowPassword","SignInInstead","ErrorLogo","t","axios","Form","value","setValue","register","handleSubmit","errors","watch","onSubmit","Next","handleChange","e","target","name","console","log","validPasswordRegex","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","noSpaceStartOrEndRegex","uniqueEmail","response","get","userInput","email","toLowerCase","i","data","length","required","minLength","maxLength","pattern","validate","trim","firstName","type","lastName","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","checkEmail","noSpaceStartOrEnd","validPassword","password","passwordConfirm","NameErrors","EmailErrors","PasswordErrors","PasswordNote"],"mappings":"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","sourcesContent":["import { ShowPassword } from '../../../../components/SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo } from '..';\nimport { t } from 'i18next';\nimport axios from 'axios';\n\nimport '../style.css';\n\nexport default function Form({ value, setValue, register, handleSubmit, errors, watch, onSubmit, Next }) {\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  console.log(errors);\n\n  const validPasswordRegex =  /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n\n  async function uniqueEmail(e) {\n    const response = await axios.get(\"http://localhost:5000/users/\");\n    const userInput = (value.email).toLowerCase();\n\n    for (let i = 0; i < response.data.length; i++) {\n      if (response.data[i].email === userInput) {\n        console.log(\"email matches\");\n        return false;\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"signup-form\" noValidate>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <div id=\"output\" />\n          <input \n            {...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"firstName\"\n            type=\"text\"\n            value={value.firstName}\n            onChange={handleChange}\n            className={(\n              errors.firstName?.type === \"pattern\" ||\n              errors.firstName?.type === \"minLength\" ||\n              errors.firstName?.type === \"maxLength\" ||\n              errors.firstName?.type === \"validate\" ||\n              errors.firstName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.firstName ? \"true\" : \"false\"}\n          />\n          <div className=\"signup-input-placeholder\">\n            {t(\"sign_up_first_name\")}\n          </div>\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"lastName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"lastName\"\n            type=\"text\"\n            value={value.lastName}\n            onChange={handleChange}\n            className={(\n              errors.lastName?.type === \"pattern\" ||\n              errors.lastName?.type === \"minLength\" ||\n              errors.lastName?.type === \"maxLength\" ||\n              errors.lastName?.type === \"validate\" ||\n              errors.lastName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.lastName ? \"true\" : \"false\"}\n          />\n          <div className=\"signup-input-placeholder\">\n            {t(\"sign_up_last_name\")}\n          </div>\n        </div>\n      </div>\n      <NameErrors errors={errors}/>\n      <div className=\"input-container\">\n        <input \n          {...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n              noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n              onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n              validEmail: (value) => validEmailRegex.test(value) ? true : false, // user@domain.com //\n              noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n              noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n              noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n              emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n              checkEmail: async () => await uniqueEmail(),\n            }\n          })}\n          autoComplete=\"off\"\n          name=\"email\"\n          type=\"email\"\n          value={value.email}\n          onChange={handleChange}\n          className={errors.email?.type === \"validEmail\" && (\n            errors.email?.type === \"noUsername\" ||\n            errors.email?.type !== \"noUsernameDot\" ||\n            errors.email?.type !== \"onlyCharacters\" ||\n            errors.email?.type !== \"noDomain\" ||\n            errors.email?.type !== \"required\" ||\n            errors.email?.type !== \"noAt\" ||\n            errors.email?.type !== \"emptyString\" ||\n            errors.email?.type !== \"noAtWithTopDomain\")\n            ? \"signup-input-error\" : \"signup-input\"\n          }\n          aria-invalid={errors.email ? \"false\" : \"true\"}\n        />\n        <div className=\"signup-input-placeholder\">\n          {t(\"sign_up_email\")}\n        </div>\n      </div>\n      <EmailErrors errors={errors}/>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <input \n            {...register(\"password\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                noSpaceStartOrEnd: (value) => noSpaceStartOrEndRegex.test(value) ? true : false,\n                validPassword: (value) => validPasswordRegex.test(value) ? true : false\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n\n            onChange={handleChange}\n            className={(\n              errors.password?.type === \"minLength\" ||\n              errors.password?.type === \"required\" ||\n              errors.password?.type === \"noSpaceStartOrEnd\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.password ? \"true\" : \"false\"}\n          />\n          <div className=\"signup-input-placeholder\">\n            {t(\"sign_up_password\")}\n          </div>\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"passwordConfirm\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                passwordConfirm: (value) => value === watch('password') ? true : false,\n                validPassword: (value) => validPasswordRegex.test(value) ? true : false\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"passwordConfirm\"\n            id=\"passwordConfirm\"\n            type=\"password\"\n            className={errors.password && (\n              errors.passwordConfirm?.type === \"minLength\" ||\n              errors.passwordConfirm?.type === \"required\" ||\n              errors.passwordConfirm?.type !== \"passwordConfirm\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.passwordConfirm ? \"true\" : \"false\"}\n          />\n          <div className=\"signup-input-placeholder\">\n            {t(\"sign_up_confirm\")}\n          </div>\n        </div>\n      </div>\n      <PasswordNote value={value} errors={errors}/>\n      <PasswordErrors errors={errors}/>\n      <ShowPassword />\n      <div className=\"button-row\">\n        <SignInInstead />\n        <Next/>\n      </div>\n    </form>\n  )\n}\n\nconst NameErrors = ({ errors }) => {\n  if ((errors.firstName?.type === \"required\" && errors.lastName?.type === \"required\") || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first and last names</p>\n      </div>\n    )\n  } else if (errors.firstName?.type === \"pattern\" || \n    errors.lastName?.type === \"pattern\" ||\n    errors.firstName?.type === \"maxLength\" || \n    errors.lastName?.type === \"maxLength\" || \n    errors.firstName?.type === \"minLength\" || \n    errors.lastName?.type === \"minLength\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Are you sure you entered your name correctly?</p>\n      </div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first name</p>\n      </div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter last name</p>\n      </div>\n    )\n  }\n}\n\nconst EmailErrors = ({ errors }) => {\n  if (errors.email?.type === \"required\" ||\n    errors.email?.type === \"emptyString\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter your email address</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"checkEmail\") {\n    return (\n      <div className=\"invalid\">\n      <ErrorLogo/>\n      <p className=\"invalidtext\">Enter a unique email</p>\n    </div>\n    )\n  }\n}\n\nconst PasswordErrors = ({ errors }) => {\n  if ((errors.password?.type === \"required\") || \n    (errors.password?.type === \"required\" && \n    errors.passwordConfirm?.type === \"required\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a password</p>\n      </div>\n    )\n  } else if (errors.password?.type !== \"validPassword\" &&\n    errors.password?.type !== \"minLength\" &&\n    errors.passwordConfirm?.type === \"required\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Confirm your password</p>\n      </div>\n    )\n  } else if (errors.password?.type !== \"validPassword\" &&\n    errors.passwordConfirm?.type !== \"required\" &&\n    errors.passwordConfirm?.type === \"passwordConfirm\" ||\n    errors.passwordConfirm?.type === \"minLength\"\n    ) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Those passwords didn't match. Try again.</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"noSpaceStartOrEnd\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Your password can't start or end with a blank space</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"minLength\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Use 8 characters or more for your password</p>\n      </div>\n    )\n  }\n}\n\nconst PasswordNote = ({ value, errors }) => {\n  if ((value.password) === '' || (value.passwordConfirm) === '') {\n    return (\n    <div className=\"signup-note\">\n      Use 8 or more characters with a mix of letters, numbers & symbols\n    </div>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}