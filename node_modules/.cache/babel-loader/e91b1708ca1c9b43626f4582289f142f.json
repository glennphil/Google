{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { t } from 'i18next';\nimport './../pages/SignUp/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9;\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 500\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create your Google Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: value => {\n                return !!value.trim();\n              }\n            }),\n            name: \"firstName\",\n            type: \"text\",\n            autoComplete: \"off\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            className: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" ? \"signup-input-error\" : \"signup-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: value => {\n                return !!value.trim();\n              }\n            }),\n            name: \"lastName\",\n            type: \"text\",\n            autoComplete: \"off\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            className: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" ? \"signup-input-error\" : \"signup-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: value => noUsernameRegex.test(value) ? false : true,\n              // @domain //\n              noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n              // @domain. //\n              onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n              // abcdefg //\n              validEmail: value => validEmailRegex.test(value) ? false : true,\n              // user@domain.com //\n              noDomain: value => noDomainRegex.test(value) ? false : true,\n              // user@ //\n              noAt: value => noAtRegex.test(value) ? false : true,\n              // user. //\n              noAtwithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n              // user.com // \n              emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n            }\n          }),\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          autoComplete: \"off\",\n          className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) !== \"validEmail\" && ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) !== \"noUsername\" && ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"noUsernameDot\" && ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyCharacters\" && ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) !== \"noDomain\" && ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) !== \"noAt\" && ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) !== \"noAtWithTopDomain\" && ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) !== \"emptyString\" && ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"required\" ? \"signup-input-error\" : \"signup-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"zsAwLN8F4dYfX5IIgVR2mAXiRTs=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst NameErrors = _ref => {\n  var _errors$firstName2, _errors$lastName2, _errors$firstName3, _errors$lastName3, _errors$firstName4, _errors$lastName4, _errors$firstName5, _errors$lastName5;\n\n  let {\n    errors\n  } = _ref;\n\n  if (errors.firstName && errors.lastName || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"validate\" && ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"validate\" || ((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"minLength\" && ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first and last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"pattern\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"pattern\" || ((_errors$firstName5 = errors.firstName) === null || _errors$firstName5 === void 0 ? void 0 : _errors$firstName5.type) === \"maxLength\" || ((_errors$lastName5 = errors.lastName) === null || _errors$lastName5 === void 0 ? void 0 : _errors$lastName5.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Are you sure you entered your name correctly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nconst EmailErrors = _ref2 => {\n  var _errors$email10, _errors$email11, _errors$email12, _errors$email13, _errors$email14, _errors$email15, _errors$email16, _errors$email17, _errors$email18, _errors$email19, _errors$email20, _errors$email21, _errors$email22, _errors$email23, _errors$email24, _errors$email25, _errors$email26;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) === \"required\" || ((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter your email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) === \"noUsername\" || ((_errors$email13 = errors.email) === null || _errors$email13 === void 0 ? void 0 : _errors$email13.type) === \"noUsernameDot\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter a username before the '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email14 = errors.email) === null || _errors$email14 === void 0 ? void 0 : _errors$email14.type) === \"onlyCharacters\" || ((_errors$email15 = errors.email) === null || _errors$email15 === void 0 ? void 0 : _errors$email15.type) === \"noAt\" || ((_errors$email16 = errors.email) === null || _errors$email16 === void 0 ? void 0 : _errors$email16.type) === \"noAtWithTopDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Don't forget to include '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email17 = errors.email) === null || _errors$email17 === void 0 ? void 0 : _errors$email17.type) === \"noDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter a domain after '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email18 = errors.email) === null || _errors$email18 === void 0 ? void 0 : _errors$email18.type) !== \"validEmail\" && ((_errors$email19 = errors.email) === null || _errors$email19 === void 0 ? void 0 : _errors$email19.type) !== \"noUsername\" && ((_errors$email20 = errors.email) === null || _errors$email20 === void 0 ? void 0 : _errors$email20.type) !== \"noUsernameDot\" && ((_errors$email21 = errors.email) === null || _errors$email21 === void 0 ? void 0 : _errors$email21.type) !== \"onlyCharacters\" && ((_errors$email22 = errors.email) === null || _errors$email22 === void 0 ? void 0 : _errors$email22.type) !== \"noDomain\" && ((_errors$email23 = errors.email) === null || _errors$email23 === void 0 ? void 0 : _errors$email23.type) !== \"noAt\" && ((_errors$email24 = errors.email) === null || _errors$email24 === void 0 ? void 0 : _errors$email24.type) !== \"noAtWithTopDomain\" && ((_errors$email25 = errors.email) === null || _errors$email25 === void 0 ? void 0 : _errors$email25.type) !== \"emptyString\" && ((_errors$email26 = errors.email) === null || _errors$email26 === void 0 ? void 0 : _errors$email26.type) !== \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This email address is not valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = EmailErrors;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"NameErrors\");\n$RefreshReg$(_c3, \"EmailErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["Helmet","useForm","Link","useState","t","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","register","handleSubmit","formState","errors","defaultValues","mode","reValidateMode","delayError","onSubmit","data","console","log","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","required","minLength","maxLength","pattern","validate","value","trim","e","target","type","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtwithTopDomain","emptyString","NameErrors","EmailErrors"],"mappings":"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","sourcesContent":["\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { t } from 'i18next';\n\nimport './../pages/SignUp/style.css'\n\nexport default function Register() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 500,\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  }\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <>\n      <Helmet>\n        <title>Create your Google Account</title>\n      </Helmet>\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <div className=\"name-row\">\n          <div className=\"input-container\">\n            <input \n              {...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n              })}\n              name=\"firstName\"\n              type=\"text\"\n              autoComplete=\"off\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              className={(errors.firstName?.type === \"pattern\") ? \"signup-input-error\" : \"signup-input\"}\n            />\n          </div>\n          <div className=\"input-container\">\n            <input \n              {...register(\"lastName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n              })}\n              name=\"lastName\"\n              type=\"text\"\n              autoComplete=\"off\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              className={(errors.lastName?.type === \"pattern\") ? \"signup-input-error\" : \"signup-input\"}\n            />\n          </div>\n        </div>\n        <NameErrors errors={errors}/>\n        <div className=\"input-container\">\n          <input \n            {...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n              noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n              onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n              validEmail: (value) => validEmailRegex.test(value) ? false : true, // user@domain.com //\n              noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n              noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n              noAtwithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n              emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n            }\n            })}\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            autoComplete=\"off\"\n            className={(\n              (errors.email?.type !== \"validEmail\") &&\n              (errors.email?.type !== \"noUsername\") &&\n              (errors.email?.type !== \"noUsernameDot\") &&\n              (errors.email?.type !== \"onlyCharacters\") &&\n              (errors.email?.type !== \"noDomain\") &&\n              (errors.email?.type !== \"noAt\") &&\n              (errors.email?.type !== \"noAtWithTopDomain\") &&\n              (errors.email?.type !== \"emptyString\") &&\n              (errors.email?.type !== \"required\"))\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n          />\n        </div>\n        <EmailErrors errors={errors}/>\n\n        <input type=\"submit\"/>\n\n      </form>\n    </>\n  )\n}\n\nconst NameErrors = ({ errors }) => {\n  if ((errors.firstName && errors.lastName) || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div>Enter first and last name</div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div>Are you sure you entered your name correctly?</div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div>Enter first name</div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div>Enter last name</div>\n    )\n  }\n}\n\nconst EmailErrors = ({ errors }) => {\n  if ((errors.email?.type === \"required\") ||\n    (errors.email?.type === \"emptyString\")) {\n    return (\n      <div>Enter your email address</div>\n    )\n  } else if ((errors.email?.type === \"noUsername\") || \n    (errors.email?.type === \"noUsernameDot\")) {\n    return (\n      <div>Enter a username before the '@'.</div>\n    )\n  } else if ((errors.email?.type === \"onlyCharacters\") ||\n    (errors.email?.type === \"noAt\") ||\n    (errors.email?.type === \"noAtWithTopDomain\")) {\n    return (\n      <div>Don't forget to include '@'.</div>\n    )\n  } else if (errors.email?.type === \"noDomain\") {\n    return (\n      <div>Enter a domain after '@'.</div>\n    )\n  } else if ((errors.email?.type !== \"validEmail\") &&\n    (errors.email?.type !== \"noUsername\") &&\n    (errors.email?.type !== \"noUsernameDot\") &&\n    (errors.email?.type !== \"onlyCharacters\") &&\n    (errors.email?.type !== \"noDomain\") &&\n    (errors.email?.type !== \"noAt\") &&\n    (errors.email?.type !== \"noAtWithTopDomain\") &&\n    (errors.email?.type !== \"emptyString\") &&\n    (errors.email?.type !== \"required\")) {\n    return (\n      <div>This email address is not valid.</div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}