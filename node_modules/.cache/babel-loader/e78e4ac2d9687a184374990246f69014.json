{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { ShowPassword } from './SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo, Next } from '../pages/SignUp';\nimport { useForm } from 'react-hook-form';\nimport { t } from 'i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$firstName4, _errors$firstName5, _errors$lastName, _errors$lastName2, _errors$lastName3, _errors$lastName4, _errors$lastName5, _errors$email;\n\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 2000\n  });\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch());\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"signup-form\",\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"firstName\",\n          type: \"text\",\n          className: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" || ((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"maxLength\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"validate\" || ((_errors$firstName5 = errors.firstName) === null || _errors$firstName5 === void 0 ? void 0 : _errors$firstName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"lastName\",\n          type: \"text\",\n          className: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" || ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"validate\" || ((_errors$lastName5 = errors.lastName) === null || _errors$lastName5 === void 0 ? void 0 : _errors$lastName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.lastName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          validate: {\n            noUsername: value => noUsernameRegex.test(value) ? false : true,\n            // @domain //\n            noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n            // @domain. //\n            onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n            // abcdefg //\n            validEmail: value => validEmailRegex.test(value) ? false : true,\n            // user@domain.com //\n            noDomain: value => noDomainRegex.test(value) ? false : true,\n            // user@ //\n            noAt: value => noAtRegex.test(value) ? false : true,\n            // user. //\n            noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n            // user.com // \n            emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n          }\n        }),\n        autoComplete: \"off\",\n        name: \"email\",\n        type: \"email\",\n        className: errors.email && ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) !== \"validEmail\" ? \"signup-input-error\" : \"signup-input\",\n        \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n            required: true,\n            validate: {}\n          }),\n          autoComplete: \"off\",\n          name: \"password\",\n          id: \"password\",\n          type: \"password\",\n          \"aria-invalid\": errors.password ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n            required: true,\n            validate: {}\n          }),\n          autoComplete: \"off\",\n          name: \"passwordConfirm\",\n          id: \"passwordConfirm\",\n          type: \"password\",\n          className: errors.passwordConfirm ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.passwordConfirm ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-row\",\n      children: [/*#__PURE__*/_jsxDEV(SignInInstead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"fq3mdG4Gv6kK71uZFQnEFbEXGN0=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst NameErrors = _ref => {\n  var _errors$firstName6, _errors$lastName6, _errors$firstName7, _errors$lastName7, _errors$firstName8, _errors$lastName8, _errors$firstName9, _errors$lastName9, _errors$firstName10, _errors$lastName10;\n\n  let {\n    errors\n  } = _ref;\n\n  if (((_errors$firstName6 = errors.firstName) === null || _errors$firstName6 === void 0 ? void 0 : _errors$firstName6.type) === \"required\" && ((_errors$lastName6 = errors.lastName) === null || _errors$lastName6 === void 0 ? void 0 : _errors$lastName6.type) === \"required\" || ((_errors$firstName7 = errors.firstName) === null || _errors$firstName7 === void 0 ? void 0 : _errors$firstName7.type) === \"validate\" && ((_errors$lastName7 = errors.lastName) === null || _errors$lastName7 === void 0 ? void 0 : _errors$lastName7.type) === \"validate\" || ((_errors$firstName8 = errors.firstName) === null || _errors$firstName8 === void 0 ? void 0 : _errors$firstName8.type) === \"minLength\" && ((_errors$lastName8 = errors.lastName) === null || _errors$lastName8 === void 0 ? void 0 : _errors$lastName8.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first and last names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName9 = errors.firstName) === null || _errors$firstName9 === void 0 ? void 0 : _errors$firstName9.type) === \"pattern\" || ((_errors$lastName9 = errors.lastName) === null || _errors$lastName9 === void 0 ? void 0 : _errors$lastName9.type) === \"pattern\" || ((_errors$firstName10 = errors.firstName) === null || _errors$firstName10 === void 0 ? void 0 : _errors$firstName10.type) === \"maxLength\" || ((_errors$lastName10 = errors.lastName) === null || _errors$lastName10 === void 0 ? void 0 : _errors$lastName10.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Are you sure you entered your name correctly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nconst EmailErrors = _ref2 => {\n  var _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9, _errors$email10, _errors$email11, _errors$email12, _errors$email13, _errors$email14, _errors$email15, _errors$email16, _errors$email17, _errors$email18;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"required\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) === \"noUsername\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) === \"noUsernameDot\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a username before the '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) === \"onlyCharacters\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) === \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) === \"noAtWithTopDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) === \"noDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a domain after '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) !== \"validEmail\" && ((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) !== \"noUsername\" && ((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) !== \"noUsernameDot\" && ((_errors$email13 = errors.email) === null || _errors$email13 === void 0 ? void 0 : _errors$email13.type) !== \"onlyCharacters\" && ((_errors$email14 = errors.email) === null || _errors$email14 === void 0 ? void 0 : _errors$email14.type) !== \"noDomain\" && ((_errors$email15 = errors.email) === null || _errors$email15 === void 0 ? void 0 : _errors$email15.type) !== \"noAt\" && ((_errors$email16 = errors.email) === null || _errors$email16 === void 0 ? void 0 : _errors$email16.type) !== \"noAtWithTopDomain\" && ((_errors$email17 = errors.email) === null || _errors$email17 === void 0 ? void 0 : _errors$email17.type) !== \"emptyString\" && ((_errors$email18 = errors.email) === null || _errors$email18 === void 0 ? void 0 : _errors$email18.type) !== \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"This email address is not valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = EmailErrors;\n\nconst PasswordErrors = _ref3 => {\n  let {\n    errors\n  } = _ref3;\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = PasswordErrors;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"NameErrors\");\n$RefreshReg$(_c3, \"EmailErrors\");\n$RefreshReg$(_c4, \"PasswordErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["ShowPassword","SignInInstead","ErrorLogo","Next","useForm","t","Register","register","watch","handleSubmit","formState","errors","defaultValues","firstName","lastName","email","mode","reValidateMode","delayError","onSubmit","data","console","log","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","required","minLength","maxLength","pattern","validate","value","trim","type","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","password","passwordConfirm","NameErrors","EmailErrors","PasswordErrors"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,CAAT,QAAkB,SAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2DP,OAAO,CAAC;AACvEQ,IAAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,EADE;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE;AAHM,KADwD;AAMvEC,IAAAA,IAAI,EAAE,UANiE;AAOvEC,IAAAA,cAAc,EAAE,UAPuD;AAQvEC,IAAAA,UAAU,EAAE;AAR2D,GAAD,CAAxE;;AAWA,QAAMC,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,EAAjB;AAEA,QAAMe,eAAe,GAAG,6CAAxB,CAfiC,CAesC;;AACvE,QAAMC,eAAe,GAAG,mBAAxB,CAhBiC,CAgBY;;AAC7C,QAAMC,kBAAkB,GAAG,uBAA3B,CAjBiC,CAiBmB;;AACpD,QAAMC,mBAAmB,GAAG,kBAA5B,CAlBiC,CAkBe;;AAChD,QAAMC,aAAa,GAAG,mBAAtB,CAnBiC,CAmBU;;AAC3C,QAAMC,SAAS,GAAG,uBAAlB,CApBiC,CAoBU;;AAC3C,QAAMC,sBAAsB,GAAG,8BAA/B,CArBiC,CAqB8B;;AAC/D,QAAMC,gBAAgB,GAAG,aAAzB,CAtBiC,CAsBO;;AAExC,sBACE;AAAM,IAAA,QAAQ,EAAErB,YAAY,CAACU,QAAD,CAA5B;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAgE,IAAA,UAAU,MAA1E;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,sBACMZ,QAAQ,CAAC,WAAD,EAAc;AACxBwB,YAAAA,QAAQ,EAAE,IADc;AAExBC,YAAAA,SAAS,EAAE,CAFa;AAGxBC,YAAAA,SAAS,EAAE,EAHa;AAIxBC,YAAAA,OAAO,EAAE,wBAJe;AAKxBC,YAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB,qBAAO,CAAC,CAACA,KAAK,CAACC,IAAN,EAAT;AACD;AAPuB,WAAd,CADd;AAUE,UAAA,YAAY,EAAC,KAVf;AAWE,UAAA,IAAI,EAAC,WAXP;AAYE,UAAA,IAAI,EAAC,MAZP;AAaE,UAAA,SAAS,EACP,sBAAA1B,MAAM,CAACE,SAAP,wEAAkByB,IAAlB,MAA2B,SAA3B,IACA,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,WAD3B,IAEA,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,WAF3B,IAGA,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,UAH3B,IAIA,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,UALlB,GAMP,oBANO,GAMgB,cAnB7B;AAqBE,0BAAc3B,MAAM,CAACE,SAAP,GAAmB,MAAnB,GAA4B;AArB5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,sBACMN,QAAQ,CAAC,UAAD,EAAa;AACvBwB,YAAAA,QAAQ,EAAE,IADa;AAEvBC,YAAAA,SAAS,EAAE,CAFY;AAGvBC,YAAAA,SAAS,EAAE,EAHY;AAIvBC,YAAAA,OAAO,EAAE,wBAJc;AAKvBC,YAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB,qBAAO,CAAC,CAACA,KAAK,CAACC,IAAN,EAAT;AACD;AAPsB,WAAb,CADd;AAUE,UAAA,YAAY,EAAC,KAVf;AAWE,UAAA,IAAI,EAAC,UAXP;AAYE,UAAA,IAAI,EAAC,MAZP;AAaE,UAAA,SAAS,EACP,qBAAA1B,MAAM,CAACG,QAAP,sEAAiBwB,IAAjB,MAA0B,SAA1B,IACA,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,WAD1B,IAEA,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,WAF1B,IAGA,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,UAH1B,IAIA,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,UALjB,GAMP,oBANO,GAMgB,cAnB7B;AAqBE,0BAAc3B,MAAM,CAACG,QAAP,GAAkB,MAAlB,GAA2B;AArB3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqDE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YArDF,eAsDE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,sBACMJ,QAAQ,CAAC,OAAD,EAAU;AACpBwB,UAAAA,QAAQ,EAAE,IADU;AAEpBI,UAAAA,QAAQ,EAAE;AACRI,YAAAA,UAAU,EAAGH,KAAD,IAAWZ,eAAe,CAACgB,IAAhB,CAAqBJ,KAArB,IAA8B,KAA9B,GAAsC,IADrD;AAC2D;AACnEK,YAAAA,aAAa,EAAGL,KAAD,IAAWX,kBAAkB,CAACe,IAAnB,CAAwBJ,KAAxB,IAAiC,KAAjC,GAAyC,IAF3D;AAEiE;AACzEM,YAAAA,cAAc,EAAGN,KAAD,IAAWV,mBAAmB,CAACc,IAApB,CAAyBJ,KAAzB,IAAkC,KAAlC,GAA0C,IAH7D;AAGmE;AAC3EO,YAAAA,UAAU,EAAGP,KAAD,IAAWb,eAAe,CAACiB,IAAhB,CAAqBJ,KAArB,IAA8B,KAA9B,GAAsC,IAJrD;AAI2D;AACnEQ,YAAAA,QAAQ,EAAGR,KAAD,IAAWT,aAAa,CAACa,IAAd,CAAmBJ,KAAnB,IAA4B,KAA5B,GAAoC,IALjD;AAKuD;AAC/DS,YAAAA,IAAI,EAAGT,KAAD,IAAWR,SAAS,CAACY,IAAV,CAAeJ,KAAf,IAAwB,KAAxB,GAAgC,IANzC;AAM+C;AACvDU,YAAAA,iBAAiB,EAAIV,KAAD,IAAWP,sBAAsB,CAACW,IAAvB,CAA4BJ,KAA5B,IAAqC,KAArC,GAA6C,IAPpE;AAO0E;AAClFW,YAAAA,WAAW,EAAGX,KAAD,IAAWN,gBAAgB,CAACU,IAAjB,CAAsBJ,KAAtB,IAA+B,KAA/B,GAAuC,IARvD,CAQ6D;;AAR7D;AAFU,SAAV,CADd;AAcE,QAAA,YAAY,EAAC,KAdf;AAeE,QAAA,IAAI,EAAC,OAfP;AAgBE,QAAA,IAAI,EAAC,OAhBP;AAiBE,QAAA,SAAS,EACPzB,MAAM,CAACI,KAAP,IACA,kBAAAJ,MAAM,CAACI,KAAP,gEAAcuB,IAAd,MAAuB,YAFd,GAGP,oBAHO,GAGgB,cApB7B;AAsBE,wBAAc3B,MAAM,CAACE,SAAP,GAAmB,MAAnB,GAA4B;AAtB5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtDF,eAgFE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAhFF,eAiFE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,sBACMJ,QAAQ,CAAC,UAAD,EAAa;AACvBwB,YAAAA,QAAQ,EAAE,IADa;AAEvBI,YAAAA,QAAQ,EAAE;AAFa,WAAb,CADd;AAME,UAAA,YAAY,EAAC,KANf;AAOE,UAAA,IAAI,EAAC,UAPP;AAQE,UAAA,EAAE,EAAC,UARL;AASE,UAAA,IAAI,EAAC,UATP;AAUE,0BAAcxB,MAAM,CAACqC,QAAP,GAAkB,MAAlB,GAA2B;AAV3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,sBACMzC,QAAQ,CAAC,iBAAD,EAAoB;AAC9BwB,YAAAA,QAAQ,EAAE,IADoB;AAE9BI,YAAAA,QAAQ,EAAE;AAFoB,WAApB,CADd;AAME,UAAA,YAAY,EAAC,KANf;AAOE,UAAA,IAAI,EAAC,iBAPP;AAQE,UAAA,EAAE,EAAC,iBARL;AASE,UAAA,IAAI,EAAC,UATP;AAUE,UAAA,SAAS,EAAExB,MAAM,CAACsC,eAAP,GAAyB,oBAAzB,GAAgD,cAV7D;AAWE,0BAActC,MAAM,CAACsC,eAAP,GAAyB,MAAzB,GAAkC;AAXlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjFF,eAgHE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEtC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAhHF,eAiHE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAjHF,eAkHE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyHD;;GAjJuBL,Q;UAC2CF,O;;;KAD3CE,Q;;AAmJxB,MAAM4C,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEvC,IAAAA;AAAF,GAAe;;AACjC,MAAK,uBAAAA,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,UAA3B,IAAyC,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,UAApE,IACC,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,UAA3B,IAAyC,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,UADpE,IAEC,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,WAA3B,IAA0C,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,WAFzE,EAEuF;AACrF,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GATD,MASO,IAAK,uBAAA3B,MAAM,CAACE,SAAP,0EAAkByB,IAAlB,MAA2B,SAA3B,IAAwC,sBAAA3B,MAAM,CAACG,QAAP,wEAAiBwB,IAAjB,MAA0B,SAAnE,IACN,wBAAA3B,MAAM,CAACE,SAAP,4EAAkByB,IAAlB,MAA2B,WAA3B,IAA0C,uBAAA3B,MAAM,CAACG,QAAP,0EAAiBwB,IAAjB,MAA0B,WADlE,EACgF;AACrF,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GARM,MAQA,IAAI3B,MAAM,CAACE,SAAP,IAAoB,CAACF,MAAM,CAACG,QAAhC,EAA0C;AAC/C,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPM,MAOA,IAAI,CAACH,MAAM,CAACE,SAAR,IAAqBF,MAAM,CAACG,QAAhC,EAA0C;AAC/C,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF,CAjCD;;MAAMoC,U;;AAmCN,MAAMC,WAAW,GAAG,SAAgB;AAAA;;AAAA,MAAf;AAAExC,IAAAA;AAAF,GAAe;;AAClC,MAAK,mBAAAA,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,UAAxB,IACD,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,aAD1B,EAC0C;AACxC,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GARD,MAQO,IAAK,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,YAAxB,IACR,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,eADnB,EACqC;AAC1C,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GARM,MAQA,IAAK,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,gBAAxB,IACR,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,MADf,IAER,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,mBAFnB,EAEyC;AAC9C,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GATM,MASA,IAAI,mBAAA3B,MAAM,CAACI,KAAP,kEAAcuB,IAAd,MAAuB,UAA3B,EAAuC;AAC5C,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPM,MAOA,IAAK,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,YAAxB,IACR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,YADf,IAER,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,eAFf,IAGR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,gBAHf,IAIR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,UAJf,IAKR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,MALf,IAMR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,mBANf,IAOR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,aAPf,IAQR,oBAAA3B,MAAM,CAACI,KAAP,oEAAcuB,IAAd,MAAuB,UARnB,EAQgC;AACrC,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF,CAjDD;;MAAMa,W;;AAmDN,MAAMC,cAAc,GAAG,SAAgB;AAAA,MAAf;AAAEzC,IAAAA;AAAF,GAAe;;AACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAFD;;MAAMyC,c","sourcesContent":["import { ShowPassword } from './SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo, Next } from '../pages/SignUp';\nimport { useForm } from 'react-hook-form';\nimport { t } from 'i18next';\n\nexport default function Register() {\n  const { register, watch, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 2000,\n  });\n\n  const onSubmit = data => console.log(data);\n  console.log(watch());\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"signup-form\" noValidate>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <input \n            {...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"firstName\"\n            type=\"text\"\n            className={(\n              errors.firstName?.type === \"pattern\" ||\n              errors.firstName?.type === \"minLength\" ||\n              errors.firstName?.type === \"maxLength\" ||\n              errors.firstName?.type === \"validate\" ||\n              errors.firstName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.firstName ? \"true\" : \"false\"}\n          />\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"lastName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"lastName\"\n            type=\"text\"\n            className={(\n              errors.lastName?.type === \"pattern\" ||\n              errors.lastName?.type === \"minLength\" ||\n              errors.lastName?.type === \"maxLength\" ||\n              errors.lastName?.type === \"validate\" ||\n              errors.lastName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.lastName ? \"true\" : \"false\"}\n          />\n        </div>\n      </div>\n      <NameErrors errors={errors}/>\n      <div className=\"input-container\">\n        <input \n          {...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n              noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n              onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n              validEmail: (value) => validEmailRegex.test(value) ? false : true, // user@domain.com //\n              noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n              noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n              noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n              emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n            }\n          })}\n          autoComplete=\"off\"\n          name=\"email\"\n          type=\"email\"\n          className={(\n            errors.email &&\n            errors.email?.type !== \"validEmail\")\n            ? \"signup-input-error\" : \"signup-input\"\n          }\n          aria-invalid={errors.firstName ? \"true\" : \"false\"}\n        />\n      </div>\n      <EmailErrors errors={errors}/>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <input \n            {...register(\"password\", {\n              required: true,\n              validate: {\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            aria-invalid={errors.password ? \"true\" : \"false\"}\n          />\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"passwordConfirm\", {\n              required: true,\n              validate: {\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"passwordConfirm\"\n            id=\"passwordConfirm\"\n            type=\"password\"\n            className={errors.passwordConfirm ? \"signup-input-error\" : \"signup-input\"}\n            aria-invalid={errors.passwordConfirm ? \"true\" : \"false\"}\n          />\n        </div>\n      </div>\n      <PasswordErrors errors={errors}/>\n      <ShowPassword />\n      <div className=\"button-row\">\n        <SignInInstead />\n        <Next />\n      </div>\n    </form>\n  )\n}\n\nconst NameErrors = ({ errors }) => {\n  if ((errors.firstName?.type === \"required\" && errors.lastName?.type === \"required\") || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first and last names</p>\n      </div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Are you sure you entered your name correctly?</p>\n      </div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first name</p>\n      </div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter last name</p>\n      </div>\n    )\n  }\n}\n\nconst EmailErrors = ({ errors }) => {\n  if ((errors.email?.type === \"required\") ||\n    (errors.email?.type === \"emptyString\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter your email address</p>\n      </div>\n    )\n  } else if ((errors.email?.type === \"noUsername\") || \n    (errors.email?.type === \"noUsernameDot\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a username before the '@'.</p>\n      </div>\n    )\n  } else if ((errors.email?.type === \"onlyCharacters\") ||\n    (errors.email?.type === \"noAt\") ||\n    (errors.email?.type === \"noAtWithTopDomain\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Don't forget to include '@'.</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"noDomain\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a domain after '@'.</p>\n      </div>\n    )\n  } else if ((errors.email?.type !== \"validEmail\") &&\n    (errors.email?.type !== \"noUsername\") &&\n    (errors.email?.type !== \"noUsernameDot\") &&\n    (errors.email?.type !== \"onlyCharacters\") &&\n    (errors.email?.type !== \"noDomain\") &&\n    (errors.email?.type !== \"noAt\") &&\n    (errors.email?.type !== \"noAtWithTopDomain\") &&\n    (errors.email?.type !== \"emptyString\") &&\n    (errors.email?.type !== \"required\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">This email address is not valid.</p>\n      </div>\n    )\n  }\n}\n\nconst PasswordErrors = ({ errors }) => {\n  <div></div>\n}\n"]},"metadata":{},"sourceType":"module"}