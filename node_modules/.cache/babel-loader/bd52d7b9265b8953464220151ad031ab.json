{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/test.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  const [value, setValue] = useState({\n    code: ''\n  });\n  var user = axios.get(\"http://localhost:5000/users\");\n\n  const handleChange = e => {\n    setValue({ ...value.code,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = () => {\n    var obj = [{\n      \"name\": \"Afghanistan\",\n      \"code\": \"AF\"\n    }, {\n      \"name\": \"Åland Islands\",\n      \"code\": \"AX\"\n    }, {\n      \"name\": \"Albania\",\n      \"code\": \"AL\"\n    }, {\n      \"name\": \"Algeria\",\n      \"code\": \"DZ\"\n    }]; // the code you're looking for\n\n    var needle = value.code; // iterate over each element in the array\n\n    for (var i = 0; i < obj.length; i++) {\n      // look for the entry with a matching `code` value\n      if (obj[i].code == needle) {// we found it\n        // obj[i].name is the matched result\n      }\n    }\n\n    console.log(obj[i].name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter code\",\n        value: value.code,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Test, \"0vQhvmjVk++OHN9AqA0jVXQzyfc=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/test.jsx"],"names":["axios","useState","Test","value","setValue","code","user","get","handleChange","e","target","name","onSubmit","obj","needle","i","length","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAE;AAD2B,GAAD,CAAlC;AAIA,MAAIC,IAAI,GAAGN,KAAK,CAACO,GAAN,CAAU,6BAAV,CAAX;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,QAAQ,CAAC,EACP,GAAGD,KAAK,CAACE,IADF;AAEP,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASP;AAFnB,KAAD,CAAR;AAID,GALD;;AAWA,QAAMS,QAAQ,GAAG,MAAM;AACrB,QAAIC,GAAG,GAAG,CACR;AAAC,cAAQ,aAAT;AAAwB,cAAQ;AAAhC,KADQ,EAER;AAAC,cAAQ,eAAT;AAA0B,cAAQ;AAAlC,KAFQ,EAGR;AAAC,cAAQ,SAAT;AAAoB,cAAQ;AAA5B,KAHQ,EAIR;AAAC,cAAQ,SAAT;AAAoB,cAAQ;AAA5B,KAJQ,CAAV,CADqB,CAQnB;;AACJ,QAAIC,MAAM,GAAGX,KAAK,CAACE,IAAnB,CATuB,CAWvB;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC;AACA,UAAIF,GAAG,CAACE,CAAD,CAAH,CAAOV,IAAP,IAAeS,MAAnB,EAA0B,CACvB;AACD;AACD;AACF;;AACCG,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,CAAD,CAAH,CAAOJ,IAAnB;AACD,GApBD;;AAuBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,QAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,KAAK,EAAET,KAAK,CAACE,IAHf;AAIE,QAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAvDuBN,I;;KAAAA,I","sourcesContent":["import axios from \"axios\";\nimport { useState } from 'react';\n\nexport default function Test() {\n  const [value, setValue] = useState({\n    code: ''\n  });\n\n  var user = axios.get(\"http://localhost:5000/users\")\n\n\n  const handleChange = (e) => {\n    setValue({\n      ...value.code,\n      [e.target.name]: e.target.value\n    });\n  }\n\n\n \n  \n\n  const onSubmit = () => {\n    var obj = [\n      {\"name\": \"Afghanistan\", \"code\": \"AF\"}, \n      {\"name\": \"Åland Islands\", \"code\": \"AX\"}, \n      {\"name\": \"Albania\", \"code\": \"AL\"}, \n      {\"name\": \"Algeria\", \"code\": \"DZ\"}\n    ];\n    \n      // the code you're looking for\n  var needle = value.code;\n  \n  // iterate over each element in the array\n  for (var i = 0; i < obj.length; i++){\n    // look for the entry with a matching `code` value\n    if (obj[i].code == needle){\n       // we found it\n      // obj[i].name is the matched result\n    }\n  }\n    console.log(obj[i].name)\n  }\n\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"enter code\"\n          value={value.code}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">submit</button>\n      </form>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}