{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/SignIn/Password/index.jsx\";\nimport axios from 'axios';\nimport { ShowPassword } from '../../../components/SignPage/ShowPassword';\nimport { Link } from 'react-router-dom';\nimport { t } from 'i18next';\nimport { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../usercontext';\nimport './style.css';\nimport './../../../components/SignPage/Container/style.css';\nimport './../../../components/SignPage/NextButton/style.css';\nimport './../../../components/SignPage/Heading/style.css';\nimport './../../../components/SignPage/SignInForm/style.css';\nimport './../../../components/SignPage/ShowPassword/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignInPassword(_ref) {\n  let {\n    Logo,\n    value,\n    setValue,\n    register,\n    handleSubmit,\n    onSubmit,\n    Next,\n    firstName,\n    email\n  } = _ref;\n\n  async function matchPassword(e) {\n    const response = await axios.get(\"http://localhost:5000/users?email=\" + value.email);\n    const userInput = value.password;\n\n    if (response.data[0].password === userInput) {\n      console.log(\"password matches\");\n      return true;\n    }\n  }\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      firstName: firstName,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Forgot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = SignInPassword;\n\nconst Heading = _ref2 => {\n  let {\n    firstName,\n    email\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: [t(\"password_heading\"), \"\\xA0\", firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-name\",\n        children: \"email@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Heading;\n\nconst Input = () => /*#__PURE__*/_jsxDEV(\"form\", {\n  className: \"signin-form pass-form\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"input-email\",\n    type: \"password\",\n    id: \"password\",\n    required: true,\n    autoComplete: \"off\",\n    minLength: \"1\",\n    spellCheck: \"false\",\n    dir: \"ltr\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"input-placeholder\",\n    children: t(\"password_form_placeholder\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c3 = Input;\n\nconst Forgot = () => /*#__PURE__*/_jsxDEV(Link, {\n  to: \"/signin/challenge/recovery/\",\n  children: /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"create-account\",\n    children: t(\"password_forgot\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this);\n\n_c4 = Forgot;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignInPassword\");\n$RefreshReg$(_c2, \"Heading\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Forgot\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/SignIn/Password/index.jsx"],"names":["axios","ShowPassword","Link","t","useContext","useState","useEffect","UserContext","SignInPassword","Logo","value","setValue","register","handleSubmit","onSubmit","Next","firstName","email","matchPassword","e","response","get","userInput","password","data","console","log","handleChange","target","name","Heading","Input","Forgot"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ShowPassword } from '../../../components/SignPage/ShowPassword';\nimport { Link } from 'react-router-dom';\nimport { t } from 'i18next';\nimport { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../usercontext';\n\nimport './style.css';\nimport './../../../components/SignPage/Container/style.css';\nimport './../../../components/SignPage/NextButton/style.css';\nimport './../../../components/SignPage/Heading/style.css';\nimport './../../../components/SignPage/SignInForm/style.css';\nimport './../../../components/SignPage/ShowPassword/style.css';\n\nexport default function SignInPassword({ Logo, value, setValue, register, handleSubmit, onSubmit, Next, firstName, email }) {\n  async function matchPassword(e) {\n    const response = await axios.get(\"http://localhost:5000/users?email=\" + value.email);\n    const userInput = (value.password);\n\n    if (response.data[0].password === userInput) {\n      console.log(\"password matches\");\n      return true;\n    }\n  }\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Logo />\n      <Heading firstName={firstName} email={email} />\n      <Input />\n      <ShowPassword />\n      <div className=\"flex-row\">\n        <Forgot />\n        <Next />\n      </div>\n    </div>\n  )\n}\n\nconst Heading = ({ firstName, email }) => (\n  <>\n    <center><h1 className=\"heading\">{t(\"password_heading\")}&nbsp;{firstName}</h1></center>\n    <center><div className=\"email-name\">email@gmail.com</div></center>\n  </>\n);\n\nconst Input = () => (\n  <form className=\"signin-form pass-form\">\n    <input className=\"input-email\" type=\"password\" id=\"password\" required autoComplete=\"off\" minLength=\"1\" spellCheck=\"false\" dir=\"ltr\" />\n    <span className=\"input-placeholder\">{t(\"password_form_placeholder\")}</span>\n  </form>\n);\n\nconst Forgot = () => (\n  <Link to=\"/signin/challenge/recovery/\">\n    <button className=\"create-account\">\n      {t(\"password_forgot\")}\n    </button>\n  </Link>\n);\n"]},"metadata":{},"sourceType":"module"}