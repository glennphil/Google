{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 500\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(data);\n  };\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          validate: {\n            noUsername: value => noUsernameRegex.test(value) ? false : true,\n            // @domain //\n            noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n            // @domain. //\n            onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n            // abcdefg //\n            validEmail: value => validEmailRegex.test(value) ? false : true,\n            // user@domain.com //\n            noDomain: value => noDomainRegex.test(value) ? false : true,\n            // user@ //\n            noAt: value => noAtRegex.test(value) ? false : true,\n            // user. //\n            noAtwithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true // user.com // \n\n          }\n        }),\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"noUsername\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter a username before the '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 47\n      }, this), ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) === \"noUsernameDot\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter a username before the '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 50\n      }, this), ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) === \"onlyCharacters\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 51\n      }, this), ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) === \"noDomain\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter a domain after '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }, this), ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) === \"noAt\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }, this), ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) === \"noAtWithTopDomain\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 54\n      }, this), ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) === \"validEmail\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst NameErrors = _ref => {\n  var _errors$firstName, _errors$lastName, _errors$firstName2, _errors$lastName2, _errors$firstName3, _errors$lastName3, _errors$firstName4, _errors$lastName4;\n\n  let {\n    errors\n  } = _ref;\n\n  if (errors.firstName && errors.lastName || ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"validate\" && ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"validate\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" && ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first and last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"pattern\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Are you sure you entered your name correctly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"NameErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["useForm","Register","register","handleSubmit","formState","errors","defaultValues","firstName","lastName","email","mode","reValidateMode","delayError","onSubmit","data","e","preventDefault","console","log","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","required","minLength","maxLength","pattern","validate","value","trim","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtwithTopDomain","type","NameErrors"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\n\nexport default function Register() {\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 500,\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(data);\n  }\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  return (\n    <>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"name-row\">\n      <input \n        {...register(\"firstName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"firstName\"\n        type=\"text\"\n      />\n      <input \n        {...register(\"lastName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"lastName\"\n        type=\"text\"\n      />\n      </div>\n      <NameErrors errors={errors}/>\n      <input \n        {...register(\"email\", {\n        required: true,\n        validate: {\n          noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n          noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n          onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n          validEmail: (value) => validEmailRegex.test(value) ? false : true, // user@domain.com //\n          noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n          noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n          noAtwithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n        }\n        })}\n        name=\"email\"\n        type=\"email\"\n      />\n      {errors.email?.type === \"required\" && <span>Enter your email address</span>}\n      {errors.email?.type === \"noUsername\" && <span>Enter a username before the '@'.</span>}\n      {errors.email?.type === \"noUsernameDot\" && <span>Enter a username before the '@'.</span>}\n      {errors.email?.type === \"onlyCharacters\" && <span>Don't forget to include '@'.</span>}\n      {errors.email?.type === \"noDomain\" && <span>Enter a domain after '@'.</span>}\n      {errors.email?.type === \"noAt\" && <span>Don't forget to include '@'.</span>}\n      {errors.email?.type === \"noAtWithTopDomain\" && <span>Don't forget to include '@'.</span>}\n      {errors.email?.type === \"validEmail\" && <span>Valid email</span> }\n\n      <input type=\"submit\"/>\n\n    </form>\n    </>\n  )\n}\n\nconst NameErrors = ({ errors }) => {\n  if ((errors.firstName && errors.lastName) || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div>Enter first and last name</div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div>Are you sure you entered your name correctly?</div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div>Enter first name</div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div>Enter last name</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}