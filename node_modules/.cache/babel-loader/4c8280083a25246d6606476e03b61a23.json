{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\nimport AccountFooter from \"../../../components/AccountFooter\";\nimport AccountHeader from \"../Header\";\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Email() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n  const [value, setValue] = useState({\n    email: ''\n  });\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const URL = \"http://localhost:5000/users?email=\" + email;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-bord-bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account-page-row-blue\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"account-flex-form-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(SubHeadNote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"account-flex-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n              register: register,\n              value: value,\n              errors: errors,\n              handleChange: handleChange,\n              noUsernameRegex: noUsernameRegex,\n              noUsernameDotRegex: noUsernameDotRegex,\n              onlyCharactersRegex: onlyCharactersRegex,\n              validEmailRegex: validEmailRegex,\n              noDomainRegex: noDomainRegex,\n              noAtWithTopDomainRegex: noAtWithTopDomainRegex,\n              noAtRegex: noAtRegex,\n              emptyStringRegex: emptyStringRegex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Email, \"ewwvy9FYukZr5BMF9DUfawufkR8=\", false, function () {\n  return [useForm];\n});\n\n_c = Email;\n\nconst SubHeading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"nav-contain-blue nav-contain-no-bord\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-form-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-subhead\",\n      children: [/*#__PURE__*/_jsxDEV(BackArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-subhead-text\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this);\n\n_c2 = SubHeading;\n\nconst SubHeadNote = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note subhead-note font-16\",\n  children: [\"The address used to identify your Google Account to you and others.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://support.google.com/accounts/answer/27442\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"learn-more\",\n    children: \"More information\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 93,\n  columnNumber: 3\n}, this);\n\n_c3 = SubHeadNote;\n\nconst EmailInput = _ref => {\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9;\n\n  let {\n    register,\n    value,\n    errors,\n    handleChange,\n    noUsernameRegex,\n    noUsernameDotRegex,\n    onlyCharactersRegex,\n    validEmailRegex,\n    noDomainRegex,\n    noAtWithTopDomainRegex,\n    noAtRegex,\n    emptyStringRegex\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        required: true,\n        validate: {\n          noUsername: value => noUsernameRegex.test(value) ? false : true,\n          // @domain //\n          noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n          // @domain. //\n          onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n          // abcdefg //\n          validEmail: value => validEmailRegex.test(value) ? true : false,\n          // user@domain.com //\n          noDomain: value => noDomainRegex.test(value) ? false : true,\n          // user@ //\n          noAt: value => noAtRegex.test(value) ? false : true,\n          // user. //\n          noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n          // user.com // \n          emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n        }\n      }),\n      autoComplete: \"off\",\n      name: \"email\",\n      type: \"email\",\n      value: value.email,\n      onChange: handleChange,\n      className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) !== \"validEmail\" && (((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) !== \"noUsername\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"noUsernameDot\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyCharacters\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) !== \"noDomain\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) !== \"required\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) !== \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) !== \"emptyString\" || ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"noAtWithTopDomain\") ? \"signup-input-error\" : \"signup-input\",\n      \"aria-invalid\": errors.email ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: \"New email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = EmailInput;\n\nconst Buttons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-button-row\",\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cancel\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/myaccount/personalinfo/\",\n      className: \"cancel-link no-deco\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    disabled: true,\n    children: \"Save\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 140,\n  columnNumber: 3\n}, this);\n\n_c5 = Buttons;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Email\");\n$RefreshReg$(_c2, \"SubHeading\");\n$RefreshReg$(_c3, \"SubHeadNote\");\n$RefreshReg$(_c4, \"EmailInput\");\n$RefreshReg$(_c5, \"Buttons\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx"],"names":["Link","useForm","useState","BackArrow","Helmet","AccountFooter","AccountHeader","Email","register","handleSubmit","formState","errors","defaultValues","email","mode","reValidateMode","delayError","value","setValue","handleChange","e","target","name","obj","JSON","parse","localStorage","getItem","URL","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","SubHeading","SubHeadNote","EmailInput","required","validate","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","type","Buttons"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\nimport AccountFooter from \"../../../components/AccountFooter\";\nimport AccountHeader from \"../Header\";\n\nimport '../style.css';\n\nexport default function Email() {\n  const {register, handleSubmit, formState: { errors }} = useForm({\n    defaultValues: {\n      email: '',\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const [value, setValue] = useState({\n    email: '',\n  })\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const URL = \"http://localhost:5000/users?email=\" + email;\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <>\n      <Helmet>\n        <title>Email</title>\n      </Helmet>\n      <AccountHeader />\n      <div className=\"form-bord-bot\" />\n      <section className=\"account-page-row-blue\">\n        <SubHeading />\n        <section className=\"account-flex-form-wrap\">\n          <SubHeadNote />\n          <section className=\"account-flex-form\">\n            <form onSubmit={handleSubmit} noValidate>\n              <EmailInput \n                register={register}\n                value={value}\n                errors={errors}\n                handleChange={handleChange}\n                noUsernameRegex={noUsernameRegex}\n                noUsernameDotRegex={noUsernameDotRegex}\n                onlyCharactersRegex={onlyCharactersRegex}\n                validEmailRegex={validEmailRegex}\n                noDomainRegex={noDomainRegex}\n                noAtWithTopDomainRegex={noAtWithTopDomainRegex}\n                noAtRegex={noAtRegex}\n                emptyStringRegex={emptyStringRegex}\n              />\n              <Buttons />\n            </form>\n      </section>\n        </section>\n       </section>\n    </>\n  )\n}\n\nconst SubHeading = () => (\n  <div className=\"nav-contain-blue nav-contain-no-bord\">\n    <div className=\"navbar-form-wrap\">\n      <div className=\"account-subhead\">\n        <BackArrow />\n        <div className=\"account-subhead-text\">Email</div>\n      </div>\n    </div>\n  </div>\n)\n\nconst SubHeadNote = () => (\n  <div className=\"top-note subhead-note font-16\">\n    The address used to identify your Google Account to you and others.&nbsp;\n    <a href=\"https://support.google.com/accounts/answer/27442\" target=\"_blank\" rel=\"noreferrer\" className=\"learn-more\">More information</a>\n  </div>\n)\n\nconst EmailInput = ({ register, value, errors, handleChange, noUsernameRegex, noUsernameDotRegex, onlyCharactersRegex, validEmailRegex, noDomainRegex, noAtWithTopDomainRegex, noAtRegex, emptyStringRegex }) => (\n  <div className=\"input-container\">\n  <input \n    {...register(\"email\", {\n      required: true,\n      validate: {\n        noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n        noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n        onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n        validEmail: (value) => validEmailRegex.test(value) ? true : false, // user@domain.com //\n        noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n        noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n        noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n        emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n      }\n    })}\n    autoComplete=\"off\"\n    name=\"email\"\n    type=\"email\"\n    value={value.email}\n    onChange={handleChange}\n    className={errors.email?.type !== \"validEmail\" && (\n      errors.email?.type !== \"noUsername\" ||\n      errors.email?.type !== \"noUsernameDot\" ||\n      errors.email?.type !== \"onlyCharacters\" ||\n      errors.email?.type !== \"noDomain\" ||\n      errors.email?.type !== \"required\" ||\n      errors.email?.type !== \"noAt\" ||\n      errors.email?.type !== \"emptyString\" ||\n      errors.email?.type !== \"noAtWithTopDomain\")\n      ? \"signup-input-error\" : \"signup-input\"\n    }\n    aria-invalid={errors.email ? \"true\" : \"false\"}\n  />\n  <span className=\"signup-input-placeholder\">\n    New email\n  </span>\n</div>\n)\n\nconst Buttons = () => (\n  <div className=\"form-button-row\">\n    <button className=\"cancel\">\n      <Link to=\"/myaccount/personalinfo/\" className=\"cancel-link no-deco\">\n        Cancel\n      </Link>\n    </button>\n    <button type=\"submit\" className=\"next\" disabled>Save</button>\n  </div>\n)\n"]},"metadata":{},"sourceType":"module"}