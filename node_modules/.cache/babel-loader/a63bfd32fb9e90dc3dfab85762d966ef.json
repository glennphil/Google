{"ast":null,"code":"'use strict';\n\nvar ES5ToInteger = require('../5/ToInteger');\n\nvar ToNumber = require('./ToNumber'); // https://www.ecma-international.org/ecma-262/11.0/#sec-tointeger\n\n\nmodule.exports = function ToInteger(value) {\n  var number = ToNumber(value);\n\n  if (number !== 0) {\n    number = ES5ToInteger(number);\n  }\n\n  return number === 0 ? 0 : number;\n};","map":{"version":3,"names":["ES5ToInteger","require","ToNumber","module","exports","ToInteger","value","number"],"sources":["/home/roqa/Documents/Git/Google/node_modules/es-abstract/2021/ToIntegerOrInfinity.js"],"sourcesContent":["'use strict';\n\nvar ES5ToInteger = require('../5/ToInteger');\n\nvar ToNumber = require('./ToNumber');\n\n// https://www.ecma-international.org/ecma-262/11.0/#sec-tointeger\n\nmodule.exports = function ToInteger(value) {\n\tvar number = ToNumber(value);\n\tif (number !== 0) {\n\t\tnumber = ES5ToInteger(number);\n\t}\n\treturn number === 0 ? 0 : number;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB,C,CAEA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAC1C,IAAIC,MAAM,GAAGL,QAAQ,CAACI,KAAD,CAArB;;EACA,IAAIC,MAAM,KAAK,CAAf,EAAkB;IACjBA,MAAM,GAAGP,YAAY,CAACO,MAAD,CAArB;EACA;;EACD,OAAOA,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACA,CAND"},"metadata":{},"sourceType":"script"}