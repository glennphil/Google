{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google-front/src/components/DarkMode/index.js\";\nimport \"./style.css\";\nimport { t } from 'i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setDark = () => {\n  localStorage.setItem(\"theme\", \"dark\");\n  document.documentElement.setAttribute(\"data-theme\", \"dark\");\n};\n\nconst setLight = () => {\n  localStorage.setItem(\"theme\", \"light\");\n  document.documentElement.setAttribute(\"data-theme\", \"light\");\n};\n\nconst storedTheme = localStorage.getItem(\"theme\");\nconst defaultDark = storedTheme === \"dark\" || storedTheme === null;\n\nif (defaultDark) {\n  setDark();\n}\n\nconst button = document.querySelector(\".btn\");\nbutton.addEventListener(\"click\", buttonClick);\n\nfunction buttonClick(e) {\n  console.log(e.target);\n}\n\nconst toggleTheme = e => {\n  if (e.target.checked) {\n    setDark();\n  } else {\n    setLight();\n  }\n};\n\nconst DarkMode = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-theme-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"toggle-theme\",\n      htmlFor: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        value: t('dark_theme.off'),\n        onChange: toggleTheme,\n        defaultChecked: defaultDark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google-front/src/components/DarkMode/index.js"],"names":["t","setDark","localStorage","setItem","document","documentElement","setAttribute","setLight","storedTheme","getItem","defaultDark","button","querySelector","addEventListener","buttonClick","e","console","log","target","toggleTheme","checked","DarkMode"],"mappings":";AAAA,OAAO,aAAP;AACA,SAASA,CAAT,QAAkB,SAAlB;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAC,EAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACD,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AACrBL,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAC,EAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACD,CAHD;;AAKA,MAAME,WAAW,GAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAApB;AAEA,MAAMC,WAAW,GACfF,WAAW,KAAK,MAAhB,IAA2BA,WAAW,KAAK,IAD7C;;AAGA,IAAIE,WAAJ,EAAiB;AACfT,EAAAA,OAAO;AACR;;AAED,MAAMU,MAAM,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,MAAvB,CAAf;AAEAD,MAAM,CAACE,gBAAP,CAAwB,OAAxB,EAAiCC,WAAjC;;AAEA,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACD;;AAGD,MAAMC,WAAW,GAAIJ,CAAD,IAAO;AACzB,MAAIA,CAAC,CAACG,MAAF,CAASE,OAAb,EAAsB;AACpBnB,IAAAA,OAAO;AACR,GAFD,MAEO;AACLM,IAAAA,QAAQ;AACT;AACF,CAND;;AAQA,MAAMc,QAAQ,GAAG,MAAM;AACnB,sBACA;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,OAAO,EAAC,UAAxC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,KAAK,EAAErB,CAAC,CAAC,gBAAD,CAHV;AAIE,QAAA,QAAQ,EAAEmB,WAJZ;AAKE,QAAA,cAAc,EAAET;AALlB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAeH,CAhBD;;KAAMW,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import \"./style.css\";\nimport { t } from 'i18next';\nconst setDark = () => {\n  localStorage.setItem(\"theme\", \"dark\");\n  document.documentElement.setAttribute(\"data-theme\", \"dark\");\n};\n\nconst setLight = () => {\n  localStorage.setItem(\"theme\", \"light\");\n  document.documentElement.setAttribute(\"data-theme\", \"light\");\n};\n\nconst storedTheme = localStorage.getItem(\"theme\");\n\nconst defaultDark =\n  storedTheme === \"dark\" || (storedTheme === null);\n\nif (defaultDark) {\n  setDark();\n}\n\nconst button = document.querySelector(\".btn\");\n\nbutton.addEventListener(\"click\", buttonClick);\n\nfunction buttonClick(e) {\n  console.log(e.target);\n}\n\n\nconst toggleTheme = (e) => {\n  if (e.target.checked) {\n    setDark();\n  } else {\n    setLight();\n  }\n};\n\nconst DarkMode = () => {\n    return (\n    <div className=\"toggle-theme-wrapper\">\n      <label className=\"toggle-theme\" htmlFor=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          value={t('dark_theme.off')}\n          onChange={toggleTheme}\n          defaultChecked={defaultDark}\n        />\n        <button class=\"btn\">Click me</button>\n        <div className=\"slider round\"></div>\n      </label>\n    </div>\n    );\n};\n\n\n\nexport default DarkMode;"]},"metadata":{},"sourceType":"module"}