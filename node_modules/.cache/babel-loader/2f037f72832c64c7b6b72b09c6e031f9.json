{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { t } from 'i18next';\nimport { validate } from \"schema-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst PWD_REGEX = /^(?=.*?[A-Z,a-z]).{8,}$/; // primary email validation regex 'valid email' //\n\nconst EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // email with characters only 'don't forget to include @' //\n\nexport const EMAIL1_REGEX = /^\\w+([.-]?\\w+)*$/; // email with characters and a top-level-domain 'don't forget to include @' //\n\nexport const EMAIL2_REGEX = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // email with characters and @ but no domain 'enter a domain after @' //\n\nexport const EMAIL3_REGEX = /^\\w+([.-]?\\w+)*@$/; // email without username and only domain 'enter a username before the '@' //\n\nexport const EMAIL4_REGEX = /^@\\w+([.-]?\\w+)*$/; // email without username and only domain and top-level domain 'enter a username before the '@' //\n\nexport const EMAIL5_REGEX = /^@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // email without username and only domain with dot 'enter a username before the '@' //\n\nexport const EMAIL6_REGEX = /^@\\w+([.-]?\\w+)*(\\.)$/; // email with characters and a top-level-domain 'don't forget to include @' //\n\nexport const EMAIL7_REGEX = /^\\w+([.-]?\\w+)*(\\.)+$/;\nexport default function Register() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const errRef = useRef();\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [validEmail1, setValidEmail1] = useState(false);\n  const [validEmail2, setValidEmail2] = useState(false);\n  const [validEmail3, setValidEmail3] = useState(false);\n  const [validEmail4, setValidEmail4] = useState(false);\n  const [validEmail5, setValidEmail5] = useState(false);\n  const [validEmail6, setValidEmail6] = useState(false);\n  const [validEmail7, setValidEmail7] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    const result = NAME_REGEX.test(firstName.trim());\n    console.log(result);\n    console.log(firstName);\n    setValidFirstName(result);\n  }, [firstName]);\n  useEffect(() => {\n    const result = NAME_REGEX.test(lastName.trim());\n    console.log(result);\n    console.log(lastName);\n    setValidLastName(result);\n  }, [lastName]);\n  useEffect(() => {\n    const result = EMAIL_REGEX.test(email.trim());\n    console.log(result);\n    console.log(email);\n    setValidEmail(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL1_REGEX.test(email.trim());\n    setValidEmail1(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL2_REGEX.test(email.trim());\n    setValidEmail2(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL3_REGEX.test(email.trim());\n    setValidEmail3(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL4_REGEX.test(email.trim());\n    setValidEmail4(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL5_REGEX.test(email.trim());\n    setValidEmail5(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL6_REGEX.test(email.trim());\n    setValidEmail6(result);\n  }, [email]);\n  useEffect(() => {\n    const result = EMAIL7_REGEX.test(email.trim());\n    setValidEmail7(result);\n  }, [email]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd.trim());\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, pwd, matchPwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const v1 = NAME_REGEX.test(firstName, lastName);\n    const v2 = EMAIL_REGEX.test(email);\n    const v3 = PWD_REGEX.test(pwd, matchPwd);\n\n    if (!v1 || !v2 || !v3) {\n      return;\n    }\n\n    console.log(firstName, lastName, email, pwd);\n    setSuccess(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Thanks, \", firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        type: \"password\",\n        children: pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Google Account comes with access to everything Google: apps, music, games, and more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"signpage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"signup-form\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-row\",\n            children: [/*#__PURE__*/_jsxDEV(FirstName, {\n              firstName: firstName,\n              setFirstName: setFirstName,\n              validFirstName: validFirstName,\n              lastName: lastName,\n              validLastName: validLastName,\n              show: show,\n              setShow: setShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LastName, {\n              lastName: lastName,\n              setLastName: setLastName,\n              validLastName: validLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Email, {\n            email: email,\n            setEmail: setEmail,\n            validEmail: validEmail,\n            validEmail1: validEmail1,\n            validEmail2: validEmail2,\n            validEmail3: validEmail3,\n            validEmail4: validEmail4,\n            validEmail5: validEmail5,\n            validEmail6: validEmail6,\n            validEmail7: validEmail7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-row\",\n            children: [/*#__PURE__*/_jsxDEV(Password, {\n              pwd: pwd,\n              setPwd: setPwd,\n              validPwd: validPwd,\n              matchPwd: matchPwd,\n              validMatch: validMatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PasswordConfirm, {\n              matchPwd: matchPwd,\n              setMatchPwd: setMatchPwd,\n              validMatch: validMatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-account\",\n            onClick: () => setShow(show),\n            children: [\"Sign Up\", show ? null : /*#__PURE__*/_jsxDEV(FirstName, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"KXneWM6Swr4W93UwAFm9RhZf/Kg=\");\n\n_c = Register;\n\nconst FirstName = _ref => {\n  let {\n    firstName,\n    setFirstName,\n    validFirstName,\n    lastName,\n    validLastName\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstname\",\n      type: \"text\",\n      autoComplete: \"off\",\n      spellCheck: \"false\",\n      dir: \"ltr\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value),\n      className: !validFirstName ? \"signup-input-error\" : \"signup-input\",\n      required: true,\n      \"aria-describedby\": \"firstnamenote\",\n      \"aria-invalid\": validFirstName ? \"false\" : \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: t(\"sign_up_first_name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"firstnamenote\",\n        className: firstName === '' && lastName === '' ? \"invalid\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"invalidtext\",\n          children: \"Enter first and last names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"firstnamenote\",\n        className: firstName === `` && lastName !== '' ? \"invalid\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"invalidtext\",\n          children: \"Enter first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lastnamenote\",\n        className: lastName === '' && firstName !== '' ? \"invalid\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"invalidtext\",\n          children: \"Enter last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"firstnamenote\",\n        className: firstName && lastName && (!validFirstName || !validLastName) ? \"invalid\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"invalidtext\",\n          children: \"Are you sure you entered your name correctly?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = FirstName;\n\nconst LastName = _ref2 => {\n  let {\n    lastName,\n    setLastName,\n    validLastName\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastname\",\n      type: \"text\",\n      autoComplete: \"off\",\n      spellCheck: \"false\",\n      dir: \"ltr\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value),\n      className: !validLastName ? \"signup-input-error\" : \"signup-input\",\n      required: true,\n      \"aria-describedby\": \"lastnamenote\",\n      \"aria-invalid\": validLastName ? \"false\" : \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: t(\"sign_up_last_name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = LastName;\n\nconst Email = _ref3 => {\n  let {\n    email,\n    setEmail,\n    validEmail,\n    validEmail1,\n    validEmail2,\n    validEmail3,\n    validEmail4,\n    validEmail5,\n    validEmail6,\n    validEmail7\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"off\",\n      spellCheck: \"false\",\n      dir: \"ltr\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: !validEmail ? \"signup-input-error\" : \"signup-input\",\n      required: true,\n      \"aria-describedby\": \"emailnote\",\n      \"aria-invalid\": validEmail ? \"false\" : \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: t(\"sign_up_email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailnote\",\n      className: email === '' ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailnote\",\n      className: email && !validEmail && (validEmail1 || validEmail2 || validEmail7) ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailnote\",\n      className: email && !validEmail && validEmail3 ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a domain after '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailnote\",\n      className: email && !validEmail && (validEmail4 || validEmail5 || validEmail6) ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a username before the '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailnote\",\n      className: email && !validEmail && !validEmail1 && !validEmail2 && !validEmail3 && !validEmail4 && !validEmail5 && !validEmail6 && !validEmail7 ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"This email address is not valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = Email;\n\nconst Password = _ref4 => {\n  let {\n    pwd,\n    setPwd,\n    validPwd,\n    matchPwd,\n    validMatch\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      spellCheck: \"false\",\n      dir: \"ltr\",\n      value: pwd,\n      onChange: e => setPwd(e.target.value),\n      className: !validPwd ? \"signup-input-error\" : \"signup-input\",\n      required: true,\n      \"aria-describedby\": \"pwdnote\",\n      \"aria-invalid\": validPwd ? \"false\" : \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: t(\"sign_up_password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pwdnote\",\n      className: pwd === '' || pwd === '' && matchPwd === '' ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pwdnote\",\n      className: pwd && !validPwd ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Use 8 characters or more for your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pwdmatchnote\",\n      className: validPwd && matchPwd === '' ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Confirm your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pwdmatchnote\",\n      className: validPwd && matchPwd && !validMatch ? \"invalid\" : \"offscreen\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Those passwords didn\\u2019t match. Try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = Password;\n\nconst PasswordConfirm = _ref5 => {\n  let {\n    matchPwd,\n    setMatchPwd,\n    validMatch\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      spellCheck: \"false\",\n      dir: \"ltr\",\n      value: matchPwd,\n      onChange: e => setMatchPwd(e.target.value),\n      className: !validMatch ? \"signup-input-error\" : \"signup-input\",\n      required: true,\n      \"aria-describedby\": \"pwdmatchnote\",\n      \"aria-invalid\": validMatch ? \"false\" : \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signup-input-placeholder\",\n      children: t(\"sign_up_confirm\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = PasswordConfirm;\n\nconst ErrorLogo = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"invalidlogo\",\n  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n    \"aria-hidden\": \"true\",\n    fill: \"currentColor\",\n    focusable: \"false\",\n    width: \"16px\",\n    height: \"16px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"https://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 373,\n  columnNumber: 3\n}, this);\n\n_c7 = ErrorLogo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"FirstName\");\n$RefreshReg$(_c3, \"LastName\");\n$RefreshReg$(_c4, \"Email\");\n$RefreshReg$(_c5, \"Password\");\n$RefreshReg$(_c6, \"PasswordConfirm\");\n$RefreshReg$(_c7, \"ErrorLogo\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/Register.jsx"],"names":["useRef","useState","useEffect","t","validate","NAME_REGEX","PWD_REGEX","EMAIL_REGEX","EMAIL1_REGEX","EMAIL2_REGEX","EMAIL3_REGEX","EMAIL4_REGEX","EMAIL5_REGEX","EMAIL6_REGEX","EMAIL7_REGEX","Register","show","setShow","errRef","firstName","setFirstName","validFirstName","setValidFirstName","lastName","setLastName","validLastName","setValidLastName","email","setEmail","validEmail","setValidEmail","validEmail1","setValidEmail1","validEmail2","setValidEmail2","validEmail3","setValidEmail3","validEmail4","setValidEmail4","validEmail5","setValidEmail5","validEmail6","setValidEmail6","validEmail7","setValidEmail7","pwd","setPwd","validPwd","setValidPwd","matchPwd","setMatchPwd","validMatch","setValidMatch","errMsg","setErrMsg","success","setSuccess","result","test","trim","console","log","match","handleSubmit","e","preventDefault","v1","v2","v3","FirstName","target","value","LastName","Email","Password","PasswordConfirm","ErrorLogo"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport { t } from 'i18next';\nimport { validate } from \"schema-utils\";\n\nconst NAME_REGEX = /^[a-z,A-Z ,.'-]{2,16}$/;\nconst PWD_REGEX = /^(?=.*?[A-Z,a-z]).{8,}$/;\n\n// primary email validation regex 'valid email' //\nconst EMAIL_REGEX =/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n// email with characters only 'don't forget to include @' //\nexport const EMAIL1_REGEX = /^\\w+([.-]?\\w+)*$/;\n// email with characters and a top-level-domain 'don't forget to include @' //\nexport const EMAIL2_REGEX = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n// email with characters and @ but no domain 'enter a domain after @' //\nexport const EMAIL3_REGEX = /^\\w+([.-]?\\w+)*@$/;\n// email without username and only domain 'enter a username before the '@' //\nexport const EMAIL4_REGEX = /^@\\w+([.-]?\\w+)*$/;\n// email without username and only domain and top-level domain 'enter a username before the '@' //\nexport const EMAIL5_REGEX = /^@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n// email without username and only domain with dot 'enter a username before the '@' //\nexport const EMAIL6_REGEX = /^@\\w+([.-]?\\w+)*(\\.)$/;\n// email with characters and a top-level-domain 'don't forget to include @' //\nexport const EMAIL7_REGEX = /^\\w+([.-]?\\w+)*(\\.)+$/;\n\nexport default function Register () {\n  const [show, setShow] = useState(false);\n\n  const errRef = useRef();\n\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [validEmail1, setValidEmail1] = useState(false);\n  const [validEmail2, setValidEmail2] = useState(false);\n  const [validEmail3, setValidEmail3] = useState(false);\n  const [validEmail4, setValidEmail4] = useState(false);\n  const [validEmail5, setValidEmail5] = useState(false);\n  const [validEmail6, setValidEmail6] = useState(false);\n  const [validEmail7, setValidEmail7] = useState(false);\n\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    const result = NAME_REGEX.test(firstName.trim());\n    console.log(result);\n    console.log(firstName);\n    setValidFirstName(result);\n  }, [firstName])\n\n  useEffect(() => {\n    const result = NAME_REGEX.test(lastName.trim());\n    console.log(result);\n    console.log(lastName);\n    setValidLastName(result);\n  }, [lastName])\n\n  useEffect(() => {\n    const result = EMAIL_REGEX.test(email.trim());\n    console.log(result);\n    console.log(email);\n    setValidEmail(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL1_REGEX.test(email.trim());\n    setValidEmail1(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL2_REGEX.test(email.trim());\n    setValidEmail2(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL3_REGEX.test(email.trim());\n    setValidEmail3(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL4_REGEX.test(email.trim());\n    setValidEmail4(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL5_REGEX.test(email.trim());\n    setValidEmail5(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL6_REGEX.test(email.trim());\n    setValidEmail6(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = EMAIL7_REGEX.test(email.trim());\n    setValidEmail7(result);\n  }, [email])\n\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd.trim());\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, pwd, matchPwd])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const v1 = NAME_REGEX.test(firstName, lastName);\n    const v2 = EMAIL_REGEX.test(email);\n    const v3 = PWD_REGEX.test(pwd, matchPwd);\n    if (!v1 || !v2 || !v3) {\n      return;\n    }\n    console.log(firstName, lastName, email, pwd);\n    setSuccess(true);\n  }\n\n  return (\n    <>\n      { success ? (\n        <section>\n          <center><h1>Thanks, {firstName}</h1></center>\n          <span><b>Email</b></span>\n          <p>{email}</p>\n          <span><b>Password</b></span>\n          <p type=\"password\">{pwd}</p>\n          <br/>\n          <p>Your Google Account comes with access to everything Google: apps, music, games, and more</p>\n          <button>Next</button>\n        </section>\n      ) : (\n      <section className=\"signpage-container\">\n        <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n        <section className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"signup-form\" noValidate>\n            <div className=\"name-row\">\n              <FirstName\n                firstName={firstName}\n                setFirstName={setFirstName}\n                validFirstName={validFirstName}\n                lastName={lastName}\n                validLastName={validLastName}\n                show={show}\n                setShow={setShow}\n              />\n              <LastName\n                lastName={lastName}\n                setLastName={setLastName}\n                validLastName={validLastName}\n              />\n            </div>\n            <Email\n              email={email}\n              setEmail={setEmail}\n              validEmail={validEmail}\n              validEmail1={validEmail1}\n              validEmail2={validEmail2}\n              validEmail3={validEmail3}\n              validEmail4={validEmail4}\n              validEmail5={validEmail5}\n              validEmail6={validEmail6}\n              validEmail7={validEmail7}\n            />\n            <div className=\"name-row\">\n              <Password\n                pwd={pwd}\n                setPwd={setPwd}\n                validPwd={validPwd}\n                matchPwd={matchPwd}\n                validMatch={validMatch}\n              />\n              <PasswordConfirm\n                matchPwd={matchPwd}\n                setMatchPwd={setMatchPwd}\n                validMatch={validMatch}\n              />\n            </div>\n            <button className=\"create-account\" onClick={() => setShow(show)}>\n              Sign Up\n              { show ? null : <FirstName/> }\n            </button>\n\n          </form>\n        </section>\n      </section>\n      )}\n    </>\n  )\n}\n\nconst FirstName = ({ firstName, setFirstName, validFirstName, lastName, validLastName }) => (\n  <div className=\"input-container\">\n    <input\n      id=\"firstname\"\n      type=\"text\"\n      autoComplete=\"off\"\n      spellCheck=\"false\"\n      dir=\"ltr\"\n      value={firstName}\n      onChange={(e) => setFirstName(e.target.value)}\n      className={!validFirstName ? \"signup-input-error\" : \"signup-input\"}\n      required\n      aria-describedby=\"firstnamenote\"\n      aria-invalid={validFirstName ? \"false\" : \"true\"}\n    />\n    <span className=\"signup-input-placeholder\">\n      {t(\"sign_up_first_name\")}\n    </span>\n    <div>\n\n      {/* If first and last name are empty */}\n      <div id=\"firstnamenote\" className={firstName === '' && lastName === '' ? \"invalid\" : \"offscreen\"} >\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first and last names</p>\n      </div>\n      {/* If first name is empty and last name isn't empty */}\n      <div id=\"firstnamenote\" className={(firstName === `` && lastName !== '') ? \"invalid\" : \"offscreen\"} >\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first name</p>\n      </div>\n      {/* If last name is empty and first name isn't empty */}\n      <div id=\"lastnamenote\" className={(lastName === '' && firstName !== '' ) ? \"invalid\" : \"offscreen\"}>\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter last name</p>\n      </div>\n      {/* If first and last name are entered but one or both aren't valid */}\n      <div id=\"firstnamenote\" className={firstName && lastName && (!validFirstName || !validLastName) ? \"invalid\" : \"offscreen\"} >\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Are you sure you entered your name correctly?</p>\n      </div>\n    </div>\n  </div>\n)\n\nconst LastName = ({ lastName, setLastName, validLastName }) => (\n  <div className=\"input-container\">\n  <input\n    id=\"lastname\"\n    type=\"text\"\n    autoComplete=\"off\"\n    spellCheck=\"false\"\n    dir=\"ltr\"\n    value={lastName}\n    onChange={(e) => setLastName(e.target.value)}\n    className={!validLastName ? \"signup-input-error\" : \"signup-input\"}\n    required\n    aria-describedby=\"lastnamenote\"\n    aria-invalid={validLastName ? \"false\" : \"true\"}\n  />\n  <span className=\"signup-input-placeholder\">\n    {t(\"sign_up_last_name\")}\n  </span>\n</div>\n)\n\nconst Email = ({ email, setEmail, validEmail, validEmail1, validEmail2, validEmail3, validEmail4, validEmail5, validEmail6, validEmail7 }) => (\n  <div className=\"input-container\">\n  <input\n    autoComplete=\"off\"\n    spellCheck=\"false\"\n    dir=\"ltr\"\n    value={email}\n    onChange={(e) => setEmail(e.target.value)}\n    className={!validEmail ? \"signup-input-error\" : \"signup-input\"}\n    required\n    aria-describedby=\"emailnote\"\n    aria-invalid={validEmail ? \"false\" : \"true\"}\n  />\n  <span className=\"signup-input-placeholder\">\n    {t(\"sign_up_email\")}\n  </span>\n  {/* If email is empty */}\n  <div id=\"emailnote\" className={email === '' ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Enter your email address</p>\n  </div>\n  <div id=\"emailnote\" className={email && !validEmail && (validEmail1 || validEmail2 || validEmail7) ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Don't forget to include '@'.</p>\n  </div>\n  <div id=\"emailnote\" className={email && !validEmail && validEmail3 ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Enter a domain after '@'.</p>\n  </div>\n  <div id=\"emailnote\" className={email && !validEmail && (validEmail4 || validEmail5 || validEmail6) ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Enter a username before the '@'.</p>\n  </div>\n  <div id=\"emailnote\" className={email && !validEmail && !validEmail1 && !validEmail2 && !validEmail3 && !validEmail4 && !validEmail5 && !validEmail6 && !validEmail7 ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">This email address is not valid.</p>\n  </div>\n</div>\n)\n\nconst Password = ({ pwd, setPwd, validPwd, matchPwd, validMatch }) => (\n  <div className=\"input-container\">\n  <input \n    type=\"password\"\n    spellCheck=\"false\"\n    dir=\"ltr\"\n    value={pwd}\n    onChange={(e) => setPwd(e.target.value)}\n    className={!validPwd ? \"signup-input-error\" : \"signup-input\"}\n    required\n    aria-describedby=\"pwdnote\"\n    aria-invalid={validPwd ? \"false\" : \"true\"}\n  />\n  <span className=\"signup-input-placeholder\">\n    {t(\"sign_up_password\")}\n  </span>\n  {/* If password is empty OR password and confirm password are empty*/}\n  <div id=\"pwdnote\" className={pwd === '' || (pwd === '' && matchPwd === '') ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Enter a password</p>\n  </div>\n  {/* If password is entered and it's not valid */}\n  <div id=\"pwdnote\" className={(pwd && !validPwd) ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Use 8 characters or more for your password</p>\n  </div>\n  {/* If password is valid and confirm password is empty */}\n  <div id=\"pwdmatchnote\" className={validPwd && matchPwd === '' ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Confirm your password</p>\n  </div>\n  {/* If password is valid and there is a confirm password but the passwords don't match */}\n  <div id=\"pwdmatchnote\" className={validPwd && matchPwd && !validMatch ? \"invalid\" : \"offscreen\"}>\n    <ErrorLogo/>\n    <p className=\"invalidtext\">Those passwords didn’t match. Try again.</p>\n  </div>\n</div>\n)\n\nconst PasswordConfirm = ({ matchPwd, setMatchPwd, validMatch }) => (\n  <div className=\"input-container\">\n  <input \n    type=\"password\"\n    spellCheck=\"false\"\n    dir=\"ltr\"\n    value={matchPwd}\n    onChange={(e) => setMatchPwd(e.target.value)}\n    className={!validMatch ? \"signup-input-error\" : \"signup-input\"}\n    required\n    aria-describedby=\"pwdmatchnote\"\n    aria-invalid={validMatch ? \"false\" : \"true\"}\n  />\n  <span className=\"signup-input-placeholder\">\n    {t(\"sign_up_confirm\")}\n  </span>\n</div>\n)\n\nconst ErrorLogo = () => (\n  <div className=\"invalidlogo\">\n    <svg aria-hidden=\"true\" fill=\"currentColor\" focusable=\"false\" width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"https://www.w3.org/2000/svg\">\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n    </svg>\n  </div>\n)\n"]},"metadata":{},"sourceType":"module"}