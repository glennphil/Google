{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx\",\n    _s = $RefreshSig$();\n\nimport AccountHeader from \"../Header\";\nimport axios from \"axios\";\nimport { t } from 'i18next';\nimport { ErrorLogo } from \"../../SignUp/Email\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useContext } from 'react';\nimport { UserContext } from \"../../../usercontext\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Email() {\n  _s();\n\n  const {\n    setUser\n  } = useContext(UserContext);\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const id = obj[0].id;\n  const gender = obj[0].gender;\n  const month = obj[0].month;\n  const day = obj[0].day;\n  const year = obj[0].year;\n  const password = obj[0].password;\n  const URL = \"http://localhost:5000/users/\" + id;\n  const [value, setValue] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    gender: gender,\n    month: month,\n    day: day,\n    year: year,\n    password: password\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: value.email\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n\n  const currentUser = async () => {\n    let response = await axios.get(URL);\n    return response.data;\n  };\n\n  const onSubmit = async () => {\n    try {\n      await axios({\n        method: \"put\",\n        url: URL,\n        data: {\n          firstName: value.firstName,\n          lastName: value.lastName,\n          email: value.email,\n          gender: value.gender,\n          month: value.month,\n          day: value.day,\n          year: value.year,\n          password: value.password\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var userObject = [];\n      userObject[0] = {\n        'firstName': value.firstName,\n        'lastName': value.lastName,\n        'email': value.email,\n        'gender': value.gender,\n        'month': value.month,\n        'day': value.day,\n        'year': value.year,\n        'password': value.password,\n        'id': id\n      };\n      localStorage.setItem(\"user\", JSON.stringify(userObject));\n      setTimeout(function () {\n        window.location.href = \"http://localhost:3000/myaccount/personalinfo/\";\n      }, 250);\n    } catch (error) {\n      console.log(error.response.data);\n    }\n\n    const user = await currentUser();\n    setUser(user);\n  };\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-bord-bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account-page-row-blue\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"account-flex-form-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(SubHeadNote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"account-flex-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n              register: register,\n              value: value,\n              errors: errors,\n              handleChange: handleChange,\n              noUsernameRegex: noUsernameRegex,\n              noUsernameDotRegex: noUsernameDotRegex,\n              onlyCharactersRegex: onlyCharactersRegex,\n              validEmailRegex: validEmailRegex,\n              noDomainRegex: noDomainRegex,\n              noAtWithTopDomainRegex: noAtWithTopDomainRegex,\n              noAtRegex: noAtRegex,\n              emptyStringRegex: emptyStringRegex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              email: email,\n              value: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Email, \"44kDrpL8IK+KMa4O16nd+HtHLi0=\", false, function () {\n  return [useForm];\n});\n\n_c = Email;\n\nconst SubHeading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"nav-contain-blue nav-contain-no-bord\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-form-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-subhead\",\n      children: [/*#__PURE__*/_jsxDEV(BackArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-subhead-text\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 3\n}, this);\n\n_c2 = SubHeading;\n\nconst SubHeadNote = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note subhead-note font-16\",\n  children: [\"The address used to identify your Google Account to you and others.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://support.google.com/accounts/answer/27442\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"learn-more\",\n    children: \"More information\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 164,\n  columnNumber: 3\n}, this);\n\n_c3 = SubHeadNote;\n\nconst EmailInput = _ref => {\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9, _errors$email10;\n\n  let {\n    register,\n    value,\n    errors,\n    handleChange,\n    noUsernameRegex,\n    noUsernameDotRegex,\n    onlyCharactersRegex,\n    validEmailRegex,\n    noDomainRegex,\n    noAtWithTopDomainRegex,\n    noAtRegex,\n    emptyStringRegex\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        required: true,\n        validate: {\n          noUsername: value => noUsernameRegex.test(value) ? false : true,\n          // @domain //\n          noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n          // @domain. //\n          onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n          // abcdefg //\n          validEmail: value => validEmailRegex.test(value) ? true : false,\n          // user@domain.com //\n          noDomain: value => noDomainRegex.test(value) ? false : true,\n          // user@ //\n          noAt: value => noAtRegex.test(value) ? false : true,\n          // user. //\n          noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n          // user.com // \n          emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n        }\n      }),\n      autoComplete: \"off\",\n      name: \"email\",\n      type: \"email\",\n      value: value.email,\n      onChange: handleChange,\n      className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"validEmail\" || ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"noUsername\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) === \"noUsernameDot\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) === \"onlyCharacters\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) === \"noDomain\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) === \"required\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) === \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) === \"emptyString\" || ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) === \"noAtWithTopDomain\" || ((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) === \"checkEmail\" ? \"change-form-input-error\" : \"change-form-input\",\n      \"aria-invalid\": errors.email ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-form-placeholder\",\n      children: \"New email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = EmailInput;\n\nconst EmailErrors = _ref2 => {\n  var _errors$email11, _errors$email12, _errors$email13, _errors$email14, _errors$email15, _errors$email16, _errors$email17, _errors$email18, _errors$email19, _errors$email20, _errors$email21, _errors$email22, _errors$email23, _errors$email24, _errors$email25;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) === \"required\" || ((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.email-errors.enter_email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email13 = errors.email) === null || _errors$email13 === void 0 ? void 0 : _errors$email13.type) === \"noUsername\" || ((_errors$email14 = errors.email) === null || _errors$email14 === void 0 ? void 0 : _errors$email14.type) === \"noUsernameDot\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.email-errors.enter_username\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email15 = errors.email) === null || _errors$email15 === void 0 ? void 0 : _errors$email15.type) === \"onlyCharacters\" || ((_errors$email16 = errors.email) === null || _errors$email16 === void 0 ? void 0 : _errors$email16.type) === \"noAt\" || ((_errors$email17 = errors.email) === null || _errors$email17 === void 0 ? void 0 : _errors$email17.type) === \"noAtWithTopDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.email-errors.enter_at\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email18 = errors.email) === null || _errors$email18 === void 0 ? void 0 : _errors$email18.type) === \"checkEmail\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.email-errors.email_exists\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email19 = errors.email) === null || _errors$email19 === void 0 ? void 0 : _errors$email19.type) === \"validEmail\" && (((_errors$email20 = errors.email) === null || _errors$email20 === void 0 ? void 0 : _errors$email20.type) !== \"noUsername\" || ((_errors$email21 = errors.email) === null || _errors$email21 === void 0 ? void 0 : _errors$email21.type) !== \"noUsernameDot\" || ((_errors$email22 = errors.email) === null || _errors$email22 === void 0 ? void 0 : _errors$email22.type) !== \"onlyCharacters\" || ((_errors$email23 = errors.email) === null || _errors$email23 === void 0 ? void 0 : _errors$email23.type) !== \"noDomain\" || ((_errors$email24 = errors.email) === null || _errors$email24 === void 0 ? void 0 : _errors$email24.type) !== \"noAt\" || ((_errors$email25 = errors.email) === null || _errors$email25 === void 0 ? void 0 : _errors$email25.type) !== \"noAtWithTopDomain\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.email-errors.not_valid\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c5 = EmailErrors;\n\nconst Buttons = _ref3 => {\n  let {\n    email,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-button-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cancel\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/myaccount/personalinfo/\",\n        className: \"cancel-link no-deco\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      disabled: email === value.email,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = Buttons;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Email\");\n$RefreshReg$(_c2, \"SubHeading\");\n$RefreshReg$(_c3, \"SubHeadNote\");\n$RefreshReg$(_c4, \"EmailInput\");\n$RefreshReg$(_c5, \"EmailErrors\");\n$RefreshReg$(_c6, \"Buttons\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Email/index.jsx"],"names":["AccountHeader","axios","t","ErrorLogo","Link","useForm","useState","useContext","UserContext","BackArrow","Helmet","Email","setUser","obj","JSON","parse","localStorage","getItem","email","firstName","lastName","id","gender","month","day","year","password","URL","value","setValue","register","handleSubmit","formState","errors","defaultValues","mode","reValidateMode","delayError","currentUser","response","get","data","onSubmit","method","url","headers","userObject","setItem","stringify","setTimeout","window","location","href","error","console","log","user","handleChange","e","target","name","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","SubHeading","SubHeadNote","EmailInput","required","validate","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","type","EmailErrors","Buttons"],"mappings":"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","sourcesContent":["import AccountHeader from \"../Header\";\nimport axios from \"axios\";\nimport { t } from 'i18next';\nimport { ErrorLogo } from \"../../SignUp/Email\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useContext } from 'react';\nimport { UserContext } from \"../../../usercontext\";\nimport { BackArrow } from \"../Home\";\nimport { Helmet } from \"react-helmet\";\n\nimport '../style.css';\n\nexport default function Email() {\n  const { setUser } = useContext(UserContext);\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const id = obj[0].id;\n  const gender = obj[0].gender;\n  const month = obj[0].month;\n  const day = obj[0].day;\n  const year = obj[0].year;\n  const password = obj[0].password;\n  const URL = \"http://localhost:5000/users/\" + id;\n\n  const [value, setValue] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    gender: gender,\n    month: month,\n    day: day,\n    year: year,\n    password: password,\n  })\n\n  const {register, handleSubmit, formState: { errors }} = useForm({\n    defaultValues: {\n      email: value.email,\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const currentUser = async () => {\n    let response = await axios.get(URL);\n    return response.data;\n  };\n\n  const onSubmit = async() => {\n    try {\n      await axios({\n        method: \"put\",\n        url: URL,\n        data: {\n          firstName: value.firstName,\n          lastName: value.lastName,\n          email: value.email,\n          gender: value.gender,\n          month: value.month,\n          day: value.day,\n          year: value.year,\n          password: value.password,\n        },\n        headers: { \"Content-Type\": \"application/json\"},\n      });\n      var userObject = []\n      userObject[0] = { \n        'firstName': value.firstName, \n        'lastName': value.lastName, \n        'email': value.email, \n        'gender': value.gender, \n        'month': value.month, \n        'day': value.day, \n        'year': value.year, \n        'password': value.password, \n        'id': id \n      }\n      localStorage.setItem(\"user\", JSON.stringify(userObject));\n      setTimeout(function () {\n        window.location.href = \"http://localhost:3000/myaccount/personalinfo/\";\n      }, 250);\n    } catch(error) {\n      console.log(error.response.data)\n    }\n    const user = await currentUser();\n    setUser(user);\n  }\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <>\n      <Helmet>\n        <title>Email</title>\n      </Helmet>\n      <AccountHeader />\n      <div className=\"form-bord-bot\" />\n      <section className=\"account-page-row-blue\">\n        <SubHeading />\n        <section className=\"account-flex-form-wrap\">\n          <SubHeadNote />\n          <section className=\"account-flex-form\">\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\n              <EmailInput \n                register={register}\n                value={value}\n                errors={errors}\n                handleChange={handleChange}\n                noUsernameRegex={noUsernameRegex}\n                noUsernameDotRegex={noUsernameDotRegex}\n                onlyCharactersRegex={onlyCharactersRegex}\n                validEmailRegex={validEmailRegex}\n                noDomainRegex={noDomainRegex}\n                noAtWithTopDomainRegex={noAtWithTopDomainRegex}\n                noAtRegex={noAtRegex}\n                emptyStringRegex={emptyStringRegex}\n              />\n              <EmailErrors\n                errors={errors}\n              />\n              <Buttons \n                email={email}\n                value={value}\n              />\n            </form>\n      </section>\n        </section>\n       </section>\n    </>\n  )\n}\n\nconst SubHeading = () => (\n  <div className=\"nav-contain-blue nav-contain-no-bord\">\n    <div className=\"navbar-form-wrap\">\n      <div className=\"account-subhead\">\n        <BackArrow />\n        <div className=\"account-subhead-text\">Email</div>\n      </div>\n    </div>\n  </div>\n)\n\nconst SubHeadNote = () => (\n  <div className=\"top-note subhead-note font-16\">\n    The address used to identify your Google Account to you and others.&nbsp;\n    <a href=\"https://support.google.com/accounts/answer/27442\" target=\"_blank\" rel=\"noreferrer\" className=\"learn-more\">More information</a>\n  </div>\n)\n\nconst EmailInput = ({ register, value, errors, handleChange, noUsernameRegex, noUsernameDotRegex, onlyCharactersRegex, validEmailRegex, noDomainRegex, noAtWithTopDomainRegex, noAtRegex, emptyStringRegex }) => (\n  <div className=\"input-container\">\n  <input \n    {...register(\"email\", {\n      required: true,\n      validate: {\n        noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n        noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n        onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n        validEmail: (value) => validEmailRegex.test(value) ? true : false, // user@domain.com //\n        noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n        noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n        noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n        emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n      }\n    })}\n    autoComplete=\"off\"\n    name=\"email\"\n    type=\"email\"\n    value={value.email}\n    onChange={handleChange}\n    className={(errors.email?.type === \"validEmail\" || \n    errors.email?.type === \"noUsername\" ||\n    errors.email?.type === \"noUsernameDot\" ||\n    errors.email?.type === \"onlyCharacters\" ||\n    errors.email?.type === \"noDomain\" ||\n    errors.email?.type === \"required\" ||\n    errors.email?.type === \"noAt\" ||\n    errors.email?.type === \"emptyString\" ||\n    errors.email?.type === \"noAtWithTopDomain\" ||\n    errors.email?.type === \"checkEmail\")\n      ? \"change-form-input-error\" : \"change-form-input\"\n    }\n    aria-invalid={errors.email ? \"true\" : \"false\"}\n  />\n  <div className=\"change-form-placeholder\">\n    New email\n  </div>\n</div>\n)\n\nconst EmailErrors = ({ errors }) => {\n  if (errors.email?.type === \"required\" ||\n    errors.email?.type === \"emptyString\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.email-errors.enter_email\")}</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"noUsername\" || \n    errors.email?.type === \"noUsernameDot\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.email-errors.enter_username\")}</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"onlyCharacters\" ||\n    errors.email?.type === \"noAt\" ||\n    errors.email?.type === \"noAtWithTopDomain\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.email-errors.enter_at\")}</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"checkEmail\") {\n    return (\n      <div className=\"invalid\">\n      <ErrorLogo/>\n      <p className=\"invalidtext\">{t(\"sign-up.email-errors.email_exists\")}</p>\n    </div>\n    )\n  } else if (errors.email?.type === \"validEmail\" && ( \n    errors.email?.type !== \"noUsername\" ||\n    errors.email?.type !== \"noUsernameDot\" ||\n    errors.email?.type !== \"onlyCharacters\" ||\n    errors.email?.type !== \"noDomain\" ||\n    errors.email?.type !== \"noAt\" ||\n    errors.email?.type !== \"noAtWithTopDomain\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.email-errors.not_valid\")}</p>\n      </div>\n    )\n  }\n}\n\nconst Buttons = ({ email, value }) => (\n  <div className=\"form-button-row\">\n    <button className=\"cancel\">\n      <Link to=\"/myaccount/personalinfo/\" className=\"cancel-link no-deco\">\n        Cancel\n      </Link>\n    </button>\n    <button type=\"submit\" className=\"next\" disabled={ email === value.email }>Save</button>\n  </div>\n)\n"]},"metadata":{},"sourceType":"module"}