{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"firstName\"));\n  console.log(watch(\"lastName\"));\n  console.log(watch(\"email\"));\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: value => {\n          return !!value.trim();\n        }\n      }),\n      name: \"firstName\",\n      type: \"text\",\n      \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: value => {\n          return !!value.trim();\n        }\n      }),\n      name: \"lastName\",\n      type: \"text\",\n      \"aria-invalid\": errors.lastName ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        required: true,\n        validate: {\n          noUsername: value => noUsernameRegex.test(value) ? false : true,\n          // @domain //\n          noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n          // @domain. //\n          onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n          // abcdefg //\n          validEmail: value => validEmailRegex.test(value) ? false : true,\n          // user@domain.com //\n          noDomain: value => noDomainRegex.test(value) ? false : true,\n          // user@ //\n          noAt: value => noAtRegex.test(value) ? false : true,\n          // user. //\n          noAtwithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n          // user.com // \n          emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n        }\n      }),\n      name: \"email\",\n      type: \"email\",\n      \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"fq3mdG4Gv6kK71uZFQnEFbEXGN0=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nconst NameErrors = _ref => {\n  var _errors$firstName, _errors$lastName, _errors$firstName2, _errors$lastName2, _errors$firstName3, _errors$lastName3, _errors$firstName4, _errors$lastName4;\n\n  let {\n    errors,\n    value\n  } = _ref;\n\n  if (errors.firstName && errors.lastName || ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"validate\" && ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"validate\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" && ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first and last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"pattern\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"maxLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Are you sure you entered your name correctly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter first name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nconst EmailErrors = _ref2 => {\n  var _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9, _errors$email10, _errors$email11, _errors$email12, _errors$email13, _errors$email14, _errors$email15, _errors$email16, _errors$email17;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" || ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter your email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) === \"noUsername\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) === \"noUsernameDot\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter a username before the '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) === \"onlyCharacters\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) === \"noAt\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) === \"noAtWithTopDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Don't forget to include '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) === \"noDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter a domain after '@'.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"validEmail\" && ((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) !== \"noUsername\" && ((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) !== \"noUsernameDot\" && ((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) !== \"onlyCharacters\" && ((_errors$email13 = errors.email) === null || _errors$email13 === void 0 ? void 0 : _errors$email13.type) !== \"noDomain\" && ((_errors$email14 = errors.email) === null || _errors$email14 === void 0 ? void 0 : _errors$email14.type) !== \"noAt\" && ((_errors$email15 = errors.email) === null || _errors$email15 === void 0 ? void 0 : _errors$email15.type) !== \"noAtWithTopDomain\" && ((_errors$email16 = errors.email) === null || _errors$email16 === void 0 ? void 0 : _errors$email16.type) !== \"emptyString\" && ((_errors$email17 = errors.email) === null || _errors$email17 === void 0 ? void 0 : _errors$email17.type) !== \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This email address is not valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = EmailErrors;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"NameErrors\");\n$RefreshReg$(_c3, \"EmailErrors\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google/src/components/register.js"],"names":["useForm","Register","register","watch","handleSubmit","formState","errors","onSubmit","data","console","log","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","required","minLength","maxLength","pattern","validate","value","trim","firstName","lastName","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtwithTopDomain","emptyString","NameErrors","type","EmailErrors","email"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\n\nexport default function Register() {\n  const { register, watch, handleSubmit, formState: { errors } } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"firstName\"));\n  console.log(watch(\"lastName\"));\n  console.log(watch(\"email\"));\n\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} noValidate>\n      <input \n        {...register(\"firstName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"firstName\"\n        type=\"text\"\n        aria-invalid={errors.firstName ? \"true\" : \"false\"}\n      />\n      <input \n        {...register(\"lastName\", {\n        required: true,\n        minLength: 2,\n        maxLength: 16,\n        pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n        validate: (value) => {\n          return !!value.trim()\n        }\n        })}\n        name=\"lastName\"\n        type=\"text\"\n        aria-invalid={errors.lastName ? \"true\" : \"false\"}\n      />\n      <NameErrors errors={errors}/>\n      <input \n        {...register(\"email\", {\n        required: true,\n        validate: {\n          noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n          noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n          onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n          validEmail: (value) => validEmailRegex.test(value) ? false : true, // user@domain.com //\n          noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n          noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n          noAtwithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n          emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n         }\n        })}\n        name=\"email\"\n        type=\"email\"\n        aria-invalid={errors.firstName ? \"true\" : \"false\"}\n      />\n      <EmailErrors errors={errors}/>\n\n      <button type=\"submit\">Next</button>\n\n    </form>\n  )\n}\n\nconst NameErrors = ({ errors, value }) => {\n  if ((errors.firstName && errors.lastName) || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\") ||\n      (errors.firstName?.type === \"minLength\" && errors.lastName?.type === \"minLength\")) {\n    return (\n      <div>Enter first and last name</div>\n    )\n  } else if ((errors.firstName?.type === \"pattern\" || errors.lastName?.type === \"pattern\") ||\n      (errors.firstName?.type === \"maxLength\" || errors.lastName?.type === \"maxLength\")) {\n    return (\n      <div>Are you sure you entered your name correctly?</div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div>Enter first name</div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div>Enter last name</div>\n    )\n  }\n}\n\nconst EmailErrors = ({ errors }) => {\n  if ((errors.email?.type === \"required\") ||\n    (errors.email?.type === \"emptyString\")) {\n    return (\n      <div>Enter your email address</div>\n    )\n  } else if ((errors.email?.type === \"noUsername\") || \n    (errors.email?.type === \"noUsernameDot\")) {\n    return (\n      <div>Enter a username before the '@'.</div>\n    )\n  } else if ((errors.email?.type === \"onlyCharacters\") ||\n    (errors.email?.type === \"noAt\") ||\n    (errors.email?.type === \"noAtWithTopDomain\")) {\n    return (\n      <div>Don't forget to include '@'.</div>\n    )\n  } else if (errors.email?.type === \"noDomain\") {\n    return (\n      <div>Enter a domain after '@'.</div>\n    )\n  } else if ((errors.email?.type !== \"validEmail\") &&\n    (errors.email?.type !== \"noUsername\") &&\n    (errors.email?.type !== \"noUsernameDot\") &&\n    (errors.email?.type !== \"onlyCharacters\") &&\n    (errors.email?.type !== \"noDomain\") &&\n    (errors.email?.type !== \"noAt\") &&\n    (errors.email?.type !== \"noAtWithTopDomain\") &&\n    (errors.email?.type !== \"emptyString\") &&\n    (errors.email?.type !== \"required\")) {\n    return (\n      <div>This email address is not valid.</div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}