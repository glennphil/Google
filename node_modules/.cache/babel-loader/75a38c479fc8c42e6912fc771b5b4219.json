{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/git/google-front/src/components/Footer/togglePanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport './style.css';\nimport { t } from 'i18next';\nimport SettingsPanel from './../../components/SettingsPanel/index';\nimport { ThemeContext } from \"../../context/themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TogglePanel() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const {\n    toggle\n  } = React.useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: toggle ? \"dark\" : \"light\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n          onOutsideClick: () => {\n            setShow(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShow(!show),\n            className: \"settings\",\n            alt: \"Settings\",\n            children: t('settings')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this), show ? /*#__PURE__*/_jsxDEV(SettingsPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TogglePanel, \"TxxuKoq63PWLB+E3GCijiZvw/LI=\");\n\n_c = TogglePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TogglePanel\");","map":{"version":3,"sources":["/home/roqa/Documents/git/google-front/src/components/Footer/togglePanel.js"],"names":["React","useState","OutsideClickHandler","t","SettingsPanel","ThemeContext","TogglePanel","show","setShow","toggle","useContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAO,aAAP;AACA,SAASC,CAAT,QAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAaT,KAAK,CAACU,UAAN,CAAiBL,YAAjB,CAAnB;AAEE,sBAAS;AAAA,2BACL;AAAK,MAAA,SAAS,EAAEI,MAAM,GAAG,MAAH,GAAY,OAAlC;AAAA,6BACF;AAAA,+BACE,QAAC,mBAAD;AAAqB,UAAA,cAAc,EAAE,MAAM;AAACD,YAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB,WAA5D;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAuC,YAAA,SAAS,EAAC,UAAjD;AAA4D,YAAA,GAAG,EAAC,UAAhE;AAAA,sBACGJ,CAAC,CAAC,UAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAKEI,IAAI,gBAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAAF,GAAqB,IAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADK,mBAAT;AAcH;;GAnBeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport './style.css';\nimport { t } from 'i18next';\nimport SettingsPanel from './../../components/SettingsPanel/index';\n\nimport { ThemeContext } from \"../../context/themeContext\";\n\nexport function TogglePanel() {\n  const [show, setShow] = useState(false)\n\n  const { toggle } = React.useContext(ThemeContext);\n\n    return ( <>\n        <div className={toggle ? \"dark\" : \"light\"}>\n      <li>\n        <OutsideClickHandler onOutsideClick={() => {setShow(false);}}>\n          <button onClick={() => setShow(!show)} className=\"settings\" alt=\"Settings\">\n            {t('settings')}\n          </button>\n          {\n          show? <SettingsPanel/> : null\n          }\n        </OutsideClickHandler>\n      </li>\n      </div>\n    </> )\n}"]},"metadata":{},"sourceType":"module"}