{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/SignUp/Form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { ShowPassword } from '../../../components/SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo } from '..';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { t } from 'i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar app = express();\napp.use(cors());\naxios.create({\n  baseURL: \"http://localhost:5000/\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default function Form() {\n  _s();\n\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$firstName4, _errors$firstName5, _errors$lastName, _errors$lastName2, _errors$lastName3, _errors$lastName4, _errors$lastName5, _errors$email, _errors$email2, _errors$email3, _errors$email4, _errors$email5, _errors$email6, _errors$email7, _errors$email8, _errors$email9, _errors$password, _errors$password2, _errors$password3, _errors$passwordConfi, _errors$passwordConfi2, _errors$passwordConfi3;\n\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const userData = { ...register\n    };\n    await axios.post(\"http://localhost:5000/users\", userData).then(result => {\n      console.log(result);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  console.log(watch());\n  const validPasswordRegex = /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(onSubmit(e)),\n    className: \"signup-form\",\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"firstName\",\n          type: \"text\",\n          value: register.firstName,\n          className: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" || ((_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"minLength\" || ((_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"maxLength\" || ((_errors$firstName4 = errors.firstName) === null || _errors$firstName4 === void 0 ? void 0 : _errors$firstName4.type) === \"validate\" || ((_errors$firstName5 = errors.firstName) === null || _errors$firstName5 === void 0 ? void 0 : _errors$firstName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_first_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            required: true,\n            minLength: 2,\n            maxLength: 16,\n            pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n            validate: value => {\n              return !!value.trim();\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"lastName\",\n          type: \"text\",\n          value: register.lastName,\n          className: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" || ((_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === \"minLength\" || ((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === \"maxLength\" || ((_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.type) === \"validate\" || ((_errors$lastName5 = errors.lastName) === null || _errors$lastName5 === void 0 ? void 0 : _errors$lastName5.type) === \"required\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.lastName ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_last_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true,\n          validate: {\n            noUsername: value => noUsernameRegex.test(value) ? false : true,\n            // @domain //\n            noUsernameDot: value => noUsernameDotRegex.test(value) ? false : true,\n            // @domain. //\n            onlyCharacters: value => onlyCharactersRegex.test(value) ? false : true,\n            // abcdefg //\n            validEmail: value => validEmailRegex.test(value) ? false : true,\n            // user@domain.com //\n            noDomain: value => noDomainRegex.test(value) ? false : true,\n            // user@ //\n            noAt: value => noAtRegex.test(value) ? false : true,\n            // user. //\n            noAtWithTopDomain: value => noAtWithTopDomainRegex.test(value) ? false : true,\n            // user.com // \n            emptyString: value => emptyStringRegex.test(value) ? false : true // ' ' //\n\n          }\n        }),\n        autoComplete: \"off\",\n        name: \"email\",\n        type: \"email\",\n        value: register.email,\n        className: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) !== \"validEmail\" && (((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) !== \"noUsername\" || ((_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.type) !== \"noUsernameDot\" || ((_errors$email4 = errors.email) === null || _errors$email4 === void 0 ? void 0 : _errors$email4.type) !== \"onlyCharacters\" || ((_errors$email5 = errors.email) === null || _errors$email5 === void 0 ? void 0 : _errors$email5.type) !== \"noDomain\" || ((_errors$email6 = errors.email) === null || _errors$email6 === void 0 ? void 0 : _errors$email6.type) !== \"required\" || ((_errors$email7 = errors.email) === null || _errors$email7 === void 0 ? void 0 : _errors$email7.type) !== \"noAt\" || ((_errors$email8 = errors.email) === null || _errors$email8 === void 0 ? void 0 : _errors$email8.type) !== \"emptyString\" || ((_errors$email9 = errors.email) === null || _errors$email9 === void 0 ? void 0 : _errors$email9.type) !== \"noAtWithTopDomain\") ? \"signup-input-error\" : \"signup-input\",\n        \"aria-invalid\": errors.email ? \"true\" : \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signup-input-placeholder\",\n        children: t(\"sign_up_email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              noSpaceStartOrEnd: value => noSpaceStartOrEndRegex.test(value) ? true : false,\n              validPassword: value => validPasswordRegex.test(value) ? false : true\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"password\",\n          id: \"password\",\n          type: \"password\",\n          value: register.password,\n          className: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"minLength\" || ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"required\" || ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === \"noSpaceStartOrEnd\" ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.password ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n            required: true,\n            minLength: 8,\n            validate: {\n              emptyString: value => emptyStringRegex.test(value) ? false : true,\n              // ' ' //\n              passwordConfirm: value => value === watch('password') ? false : true,\n              validPassword: value => validPasswordRegex.test(value) ? false : true\n            }\n          }),\n          autoComplete: \"off\",\n          name: \"passwordConfirm\",\n          id: \"passwordConfirm\",\n          type: \"password\",\n          className: errors.password && (((_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.type) === \"minLength\" || ((_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.type) === \"required\" || ((_errors$passwordConfi3 = errors.passwordConfirm) === null || _errors$passwordConfi3 === void 0 ? void 0 : _errors$passwordConfi3.type) !== \"passwordConfirm\") ? \"signup-input-error\" : \"signup-input\",\n          \"aria-invalid\": errors.passwordConfirm ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-input-placeholder\",\n          children: t(\"sign_up_confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordNote, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-row\",\n      children: [/*#__PURE__*/_jsxDEV(SignInInstead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"fq3mdG4Gv6kK71uZFQnEFbEXGN0=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nconst NameErrors = _ref => {\n  var _errors$firstName6, _errors$lastName6, _errors$firstName7, _errors$lastName7, _errors$firstName8, _errors$lastName8, _errors$firstName9, _errors$lastName9, _errors$firstName10, _errors$lastName10;\n\n  let {\n    errors\n  } = _ref;\n\n  if (((_errors$firstName6 = errors.firstName) === null || _errors$firstName6 === void 0 ? void 0 : _errors$firstName6.type) === \"required\" && ((_errors$lastName6 = errors.lastName) === null || _errors$lastName6 === void 0 ? void 0 : _errors$lastName6.type) === \"required\" || ((_errors$firstName7 = errors.firstName) === null || _errors$firstName7 === void 0 ? void 0 : _errors$firstName7.type) === \"validate\" && ((_errors$lastName7 = errors.lastName) === null || _errors$lastName7 === void 0 ? void 0 : _errors$lastName7.type) === \"validate\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first and last names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$firstName8 = errors.firstName) === null || _errors$firstName8 === void 0 ? void 0 : _errors$firstName8.type) === \"pattern\" || ((_errors$lastName8 = errors.lastName) === null || _errors$lastName8 === void 0 ? void 0 : _errors$lastName8.type) === \"pattern\" || ((_errors$firstName9 = errors.firstName) === null || _errors$firstName9 === void 0 ? void 0 : _errors$firstName9.type) === \"maxLength\" || ((_errors$lastName9 = errors.lastName) === null || _errors$lastName9 === void 0 ? void 0 : _errors$lastName9.type) === \"maxLength\" || ((_errors$firstName10 = errors.firstName) === null || _errors$firstName10 === void 0 ? void 0 : _errors$firstName10.type) === \"minLength\" || ((_errors$lastName10 = errors.lastName) === null || _errors$lastName10 === void 0 ? void 0 : _errors$lastName10.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Are you sure you entered your name correctly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  } else if (errors.firstName && !errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  } else if (!errors.firstName && errors.lastName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = NameErrors;\n\nconst EmailErrors = _ref2 => {\n  var _errors$email10, _errors$email11, _errors$email12, _errors$email13, _errors$email14, _errors$email15, _errors$email16, _errors$email17, _errors$email18, _errors$email19, _errors$email20, _errors$email21, _errors$email22, _errors$email23, _errors$email24;\n\n  let {\n    errors\n  } = _ref2;\n\n  if (((_errors$email10 = errors.email) === null || _errors$email10 === void 0 ? void 0 : _errors$email10.type) === \"required\" || ((_errors$email11 = errors.email) === null || _errors$email11 === void 0 ? void 0 : _errors$email11.type) === \"emptyString\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email12 = errors.email) === null || _errors$email12 === void 0 ? void 0 : _errors$email12.type) === \"noUsername\" || ((_errors$email13 = errors.email) === null || _errors$email13 === void 0 ? void 0 : _errors$email13.type) === \"noUsernameDot\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a username before the '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email14 = errors.email) === null || _errors$email14 === void 0 ? void 0 : _errors$email14.type) === \"onlyCharacters\" || ((_errors$email15 = errors.email) === null || _errors$email15 === void 0 ? void 0 : _errors$email15.type) === \"noAt\" || ((_errors$email16 = errors.email) === null || _errors$email16 === void 0 ? void 0 : _errors$email16.type) === \"noAtWithTopDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Don't forget to include '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email17 = errors.email) === null || _errors$email17 === void 0 ? void 0 : _errors$email17.type) === \"noDomain\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a domain after '@'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$email18 = errors.email) === null || _errors$email18 === void 0 ? void 0 : _errors$email18.type) !== \"validEmail\" & (((_errors$email19 = errors.email) === null || _errors$email19 === void 0 ? void 0 : _errors$email19.type) !== \"noUsername\" || ((_errors$email20 = errors.email) === null || _errors$email20 === void 0 ? void 0 : _errors$email20.type) !== \"noUsernameDot\" || ((_errors$email21 = errors.email) === null || _errors$email21 === void 0 ? void 0 : _errors$email21.type) !== \"onlyCharacters\" || ((_errors$email22 = errors.email) === null || _errors$email22 === void 0 ? void 0 : _errors$email22.type) !== \"noDomain\" || ((_errors$email23 = errors.email) === null || _errors$email23 === void 0 ? void 0 : _errors$email23.type) !== \"noAt\" || ((_errors$email24 = errors.email) === null || _errors$email24 === void 0 ? void 0 : _errors$email24.type) !== \"noAtWithTopDomain\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"This email address is not valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = EmailErrors;\n\nconst PasswordErrors = _ref3 => {\n  var _errors$password4, _errors$password5, _errors$passwordConfi4, _errors$password6, _errors$password7, _errors$passwordConfi5, _errors$password8, _errors$passwordConfi6, _errors$passwordConfi7, _errors$password9, _errors$password10;\n\n  let {\n    errors\n  } = _ref3;\n\n  if (((_errors$password4 = errors.password) === null || _errors$password4 === void 0 ? void 0 : _errors$password4.type) === \"required\" || ((_errors$password5 = errors.password) === null || _errors$password5 === void 0 ? void 0 : _errors$password5.type) === \"required\" && ((_errors$passwordConfi4 = errors.passwordConfirm) === null || _errors$passwordConfi4 === void 0 ? void 0 : _errors$passwordConfi4.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Enter a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password6 = errors.password) === null || _errors$password6 === void 0 ? void 0 : _errors$password6.type) === \"validPassword\" && ((_errors$password7 = errors.password) === null || _errors$password7 === void 0 ? void 0 : _errors$password7.type) !== \"minLength\" && ((_errors$passwordConfi5 = errors.passwordConfirm) === null || _errors$passwordConfi5 === void 0 ? void 0 : _errors$passwordConfi5.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Confirm your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password8 = errors.password) === null || _errors$password8 === void 0 ? void 0 : _errors$password8.type) === \"validPassword\" && ((_errors$passwordConfi6 = errors.passwordConfirm) === null || _errors$passwordConfi6 === void 0 ? void 0 : _errors$passwordConfi6.type) !== \"required\" && ((_errors$passwordConfi7 = errors.passwordConfirm) === null || _errors$passwordConfi7 === void 0 ? void 0 : _errors$passwordConfi7.type) !== \"passwordConfirm\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Those passwords didn't match. Try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password9 = errors.password) === null || _errors$password9 === void 0 ? void 0 : _errors$password9.type) === \"noSpaceStartOrEnd\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Your password can't start or end with a blank space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password10 = errors.password) === null || _errors$password10 === void 0 ? void 0 : _errors$password10.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: \"Use 8 characters or more for your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c4 = PasswordErrors;\n\nconst PasswordNote = _ref4 => {\n  let {\n    errors\n  } = _ref4;\n  return !errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-note\",\n    children: \"Use 8 or more characters with a mix of letters, numbers & symbols\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this) : '';\n};\n\n_c5 = PasswordNote;\n\nconst Next = _ref5 => {\n  let {\n    show,\n    setShow\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    children: t('next')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = Next;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"NameErrors\");\n$RefreshReg$(_c3, \"EmailErrors\");\n$RefreshReg$(_c4, \"PasswordErrors\");\n$RefreshReg$(_c5, \"PasswordNote\");\n$RefreshReg$(_c6, \"Next\");","map":{"version":3,"names":["ShowPassword","SignInInstead","ErrorLogo","useForm","axios","t","express","require","cors","app","use","create","baseURL","headers","Form","register","watch","handleSubmit","formState","errors","defaultValues","firstName","lastName","email","password","passwordConfirm","mode","reValidateMode","delayError","onSubmit","e","preventDefault","userData","post","then","result","console","log","catch","error","validPasswordRegex","validEmailRegex","noUsernameRegex","noUsernameDotRegex","onlyCharactersRegex","noDomainRegex","noAtRegex","noAtWithTopDomainRegex","emptyStringRegex","noSpaceStartOrEndRegex","required","minLength","maxLength","pattern","validate","value","trim","type","noUsername","test","noUsernameDot","onlyCharacters","validEmail","noDomain","noAt","noAtWithTopDomain","emptyString","noSpaceStartOrEnd","validPassword","NameErrors","EmailErrors","PasswordErrors","PasswordNote","Next","show","setShow"],"sources":["/home/roqa/Documents/Git/Google/src/pages/SignUp/Form/index.jsx"],"sourcesContent":["import { ShowPassword } from '../../../components/SignPage/ShowPassword';\nimport { SignInInstead, ErrorLogo } from '..';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { t } from 'i18next';\n\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n \napp.use(cors())\n\naxios.create({\n  baseURL:\"http://localhost:5000/\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport default function Form() {\n  const { register, watch, handleSubmit, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirm: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const userData = {\n      ...register\n    };\n\n    await axios.post(\"http://localhost:5000/users\", userData)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  };\n\n  console.log(watch());\n\n  const validPasswordRegex =  /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user@domain.com //\n  const noUsernameRegex = /^@\\w+([.-]?\\w+)*$/; // @hello //\n  const noUsernameDotRegex = /^@\\w+([.-]?\\w+)*(\\.)$/; // @domain. //\n  const onlyCharactersRegex = /^\\w+([.-]?\\w+)*$/; // adsfasdfasdf //\n  const noDomainRegex = /^\\w+([.-]?\\w+)*@$/; // user@ //\n  const noAtRegex = /^\\w+([.-]?\\w+)*(\\.)+$/; // user. //\n  const noAtWithTopDomainRegex = /^\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/; // user.com //\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n\n  return (\n    <form onSubmit={(e) => handleSubmit(onSubmit(e))} className=\"signup-form\" noValidate>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <input \n            {...register(\"firstName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"firstName\"\n            type=\"text\"\n            value={register.firstName}\n            className={(\n              errors.firstName?.type === \"pattern\" ||\n              errors.firstName?.type === \"minLength\" ||\n              errors.firstName?.type === \"maxLength\" ||\n              errors.firstName?.type === \"validate\" ||\n              errors.firstName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.firstName ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_first_name\")}\n          </span>\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"lastName\", {\n              required: true,\n              minLength: 2,\n              maxLength: 16,\n              pattern: /^[a-z,A-Z ,.'-]{2,16}$/,\n              validate: (value) => {\n                return !!value.trim()\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"lastName\"\n            type=\"text\"\n            value={register.lastName}\n            className={(\n              errors.lastName?.type === \"pattern\" ||\n              errors.lastName?.type === \"minLength\" ||\n              errors.lastName?.type === \"maxLength\" ||\n              errors.lastName?.type === \"validate\" ||\n              errors.lastName?.type === \"required\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.lastName ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_last_name\")}\n          </span>\n        </div>\n      </div>\n      <NameErrors errors={errors}/>\n      <div className=\"input-container\">\n        <input \n          {...register(\"email\", {\n            required: true,\n            validate: {\n              noUsername: (value) => noUsernameRegex.test(value) ? false : true, // @domain //\n              noUsernameDot: (value) => noUsernameDotRegex.test(value) ? false : true, // @domain. //\n              onlyCharacters: (value) => onlyCharactersRegex.test(value) ? false : true, // abcdefg //\n              validEmail: (value) => validEmailRegex.test(value) ? false : true, // user@domain.com //\n              noDomain: (value) => noDomainRegex.test(value) ? false : true, // user@ //\n              noAt: (value) => noAtRegex.test(value) ? false : true, // user. //\n              noAtWithTopDomain : (value) => noAtWithTopDomainRegex.test(value) ? false : true, // user.com // \n              emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n            }\n          })}\n          autoComplete=\"off\"\n          name=\"email\"\n          type=\"email\"\n          value={register.email}\n          className={errors.email?.type !== \"validEmail\" && (\n            errors.email?.type !== \"noUsername\" ||\n            errors.email?.type !== \"noUsernameDot\" ||\n            errors.email?.type !== \"onlyCharacters\" ||\n            errors.email?.type !== \"noDomain\" ||\n            errors.email?.type !== \"required\" ||\n            errors.email?.type !== \"noAt\" ||\n            errors.email?.type !== \"emptyString\" ||\n            errors.email?.type !== \"noAtWithTopDomain\")\n            ? \"signup-input-error\" : \"signup-input\"\n          }\n          aria-invalid={errors.email ? \"true\" : \"false\"}\n        />\n        <span className=\"signup-input-placeholder\">\n          {t(\"sign_up_email\")}\n        </span>\n      </div>\n      <EmailErrors errors={errors}/>\n      <div className=\"name-row\">\n        <div className=\"input-container\">\n          <input \n            {...register(\"password\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                noSpaceStartOrEnd: (value) => noSpaceStartOrEndRegex.test(value) ? true : false,\n                validPassword: (value) => validPasswordRegex.test(value) ? false : true\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            value={register.password}\n            className={(\n              errors.password?.type === \"minLength\" ||\n              errors.password?.type === \"required\" ||\n              errors.password?.type === \"noSpaceStartOrEnd\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.password ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_password\")}\n          </span>\n        </div>\n        <div className=\"input-container\">\n          <input \n            {...register(\"passwordConfirm\", {\n              required: true,\n              minLength: 8,\n              validate: {\n                emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n                passwordConfirm: (value) => value === watch('password') ? false : true,\n                validPassword: (value) => validPasswordRegex.test(value) ? false : true\n              }\n            })}\n            autoComplete=\"off\"\n            name=\"passwordConfirm\"\n            id=\"passwordConfirm\"\n            type=\"password\"\n            className={errors.password && (\n              errors.passwordConfirm?.type === \"minLength\" ||\n              errors.passwordConfirm?.type === \"required\" ||\n              errors.passwordConfirm?.type !== \"passwordConfirm\")\n              ? \"signup-input-error\" : \"signup-input\"\n            }\n            aria-invalid={errors.passwordConfirm ? \"true\" : \"false\"}\n          />\n          <span className=\"signup-input-placeholder\">\n            {t(\"sign_up_confirm\")}\n          </span>\n        </div>\n      </div>\n      <PasswordNote errors={errors}/>\n      <PasswordErrors errors={errors}/>\n      <ShowPassword />\n      <div className=\"button-row\">\n        <SignInInstead />\n        <Next/>\n      </div>\n    </form>\n  )\n}\n\nconst NameErrors = ({ errors }) => {\n  if ((errors.firstName?.type === \"required\" && errors.lastName?.type === \"required\") || \n      (errors.firstName?.type === \"validate\" && errors.lastName?.type === \"validate\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first and last names</p>\n      </div>\n    )\n  } else if (errors.firstName?.type === \"pattern\" || \n    errors.lastName?.type === \"pattern\" ||\n    errors.firstName?.type === \"maxLength\" || \n    errors.lastName?.type === \"maxLength\" || \n    errors.firstName?.type === \"minLength\" || \n    errors.lastName?.type === \"minLength\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Are you sure you entered your name correctly?</p>\n      </div>\n    )\n  } else if (errors.firstName && !errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter first name</p>\n      </div>\n    )\n  } else if (!errors.firstName && errors.lastName) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter last name</p>\n      </div>\n    )\n  }\n}\n\nconst EmailErrors = ({ errors }) => {\n  if (errors.email?.type === \"required\" ||\n    errors.email?.type === \"emptyString\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter your email address</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"noUsername\" || \n    errors.email?.type === \"noUsernameDot\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a username before the '@'.</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"onlyCharacters\" ||\n    errors.email?.type === \"noAt\" ||\n    errors.email?.type === \"noAtWithTopDomain\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Don't forget to include '@'.</p>\n      </div>\n    )\n  } else if (errors.email?.type === \"noDomain\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a domain after '@'.</p>\n      </div>\n    )\n  } else if (errors.email?.type !== \"validEmail\" & ( \n    errors.email?.type !== \"noUsername\" ||\n    errors.email?.type !== \"noUsernameDot\" ||\n    errors.email?.type !== \"onlyCharacters\" ||\n    errors.email?.type !== \"noDomain\" ||\n    errors.email?.type !== \"noAt\" ||\n    errors.email?.type !== \"noAtWithTopDomain\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">This email address is not valid.</p>\n      </div>\n    )\n  }\n}\n\nconst PasswordErrors = ({ errors }) => {\n  if ((errors.password?.type === \"required\") || \n    (errors.password?.type === \"required\" && \n    errors.passwordConfirm?.type === \"required\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Enter a password</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"validPassword\" &&\n    errors.password?.type !== \"minLength\" &&\n    errors.passwordConfirm?.type === \"required\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Confirm your password</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"validPassword\" &&\n    errors.passwordConfirm?.type !== \"required\" &&\n    errors.passwordConfirm?.type !== \"passwordConfirm\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Those passwords didn't match. Try again.</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"noSpaceStartOrEnd\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Your password can't start or end with a blank space</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"minLength\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">Use 8 characters or more for your password</p>\n      </div>\n    )\n  }\n}\n\nconst PasswordNote = ({ errors }) => (\n  (!errors.password) ?\n    <div className=\"signup-note\">\n      Use 8 or more characters with a mix of letters, numbers & symbols\n    </div> : ''\n);\n\nconst Next = ({ show, setShow }) => (\n  <button type=\"submit\" className=\"next\">\n    {t('next')}\n  </button>\n);"],"mappings":"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"},"metadata":{},"sourceType":"module"}