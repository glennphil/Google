{"ast":null,"code":"var _jsxFileName = \"/home/roqa/Documents/Git/Google/src/pages/MyAccount/Password/index.jsx\",\n    _s = $RefreshSig$();\n\nimport AccountHeader from \"../../../components/MyAccount/Header\";\nimport axios from \"axios\";\nimport { t } from 'i18next';\nimport { ErrorLogo } from \"../../SignUp/Email\";\nimport { useForm } from \"react-hook-form\";\nimport { BackArrow, Cancel } from \"../Home\";\nimport { useState, useContext } from 'react';\nimport { UserContext } from \"../../../usercontext\";\nimport { Helmet } from \"react-helmet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Password() {\n  _s();\n\n  const {\n    setUser\n  } = useContext(UserContext);\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const id = obj[0].id;\n  const gender = obj[0].gender;\n  const month = obj[0].month;\n  const day = obj[0].day;\n  const year = obj[0].year;\n  const password = obj[0].password;\n  const URL = \"http://localhost:5000/users/\" + id;\n  const [value, setValue] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    gender: gender,\n    month: month,\n    day: day,\n    year: year,\n    password: password,\n    passwordConfirm: ''\n  });\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      password: '',\n      passwordConfirm: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000\n  });\n\n  const currentUser = async () => {\n    let response = await axios.get(URL);\n    return response.data;\n  };\n\n  const onSubmit = async () => {\n    try {\n      await axios({\n        method: \"put\",\n        url: URL,\n        data: {\n          firstName: value.firstName,\n          lastName: value.lastName,\n          email: value.email,\n          gender: value.gender,\n          month: value.month,\n          day: value.day,\n          year: value.year,\n          password: value.password\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var userObject = [];\n      userObject[0] = {\n        'firstName': value.firstName,\n        'lastName': value.lastName,\n        'email': value.email,\n        'gender': value.gender,\n        'month': value.month,\n        'day': value.day,\n        'year': value.year,\n        'password': value.password,\n        'id': id\n      };\n      localStorage.setItem(\"user\", JSON.stringify(userObject));\n      setTimeout(function () {\n        window.location.href = \"http://localhost:3000/myaccount/personalinfo/\";\n      }, 250);\n    } catch (error) {\n      console.log(error.response.data);\n    }\n\n    const user = await currentUser();\n    setUser(user);\n  };\n\n  const handleChange = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validPasswordRegex = /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: t(\"my-account.personal-info.personal-password.password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-bord-bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account-page-row-blue\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"account-flex-form-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(SubHeadNote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"account-flex-form\",\n          children: [/*#__PURE__*/_jsxDEV(TopNote, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(PasswordInput, {\n              value: value,\n              handleChange: handleChange,\n              register: register,\n              errors: errors,\n              emptyStringRegex: emptyStringRegex,\n              noSpaceStartOrEndRegex: noSpaceStartOrEndRegex,\n              validPasswordRegex: validPasswordRegex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmInput, {\n              value: value,\n              handleChange: handleChange,\n              register: register,\n              errors: errors,\n              emptyStringRegex: emptyStringRegex,\n              watch: watch,\n              validPasswordRegex: validPasswordRegex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PasswordErrors, {\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Note, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              value: value,\n              password: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Password, \"RS+2oblXm6+r6hDGYeneSAUhaDQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Password;\n\nconst SubHeading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"nav-contain-blue nav-contain-no-bord\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-form-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-subhead\",\n      children: [/*#__PURE__*/_jsxDEV(BackArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-subhead-text\",\n        children: t(\"my-account.personal-info.personal-password.password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 3\n}, this);\n\n_c2 = SubHeading;\n\nconst SubHeadNote = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note subhead-note font-16\",\n  children: [t(\"my-account.personal-info.personal-password.top_note\"), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://support.google.com/accounts/answer/27442\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"learn-more\",\n    children: t(\"more_information\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 164,\n  columnNumber: 3\n}, this);\n\n_c3 = SubHeadNote;\n\nconst TopNote = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note font-12 uppercase\",\n  children: t(\"my-account.personal-info.personal-password.update_password\")\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 173,\n  columnNumber: 3\n}, this);\n\n_c4 = TopNote;\n\nconst PasswordInput = _ref => {\n  var _errors$password, _errors$password2, _errors$password3;\n\n  let {\n    register,\n    emptyStringRegex,\n    noSpaceStartOrEndRegex,\n    validPasswordRegex,\n    handleChange,\n    errors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n        required: true,\n        minLength: 8,\n        validate: {\n          emptyString: value => emptyStringRegex.test(value) ? false : true,\n          // ' ' //\n          noSpaceStartOrEnd: value => noSpaceStartOrEndRegex.test(value) ? true : false,\n          validPassword: value => validPasswordRegex.test(value) ? true : false\n        }\n      }),\n      autoComplete: \"off\",\n      name: \"password\",\n      id: \"password\",\n      type: \"password\",\n      onChange: handleChange,\n      className: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"minLength\" || ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"required\" || ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === \"noSpaceStartOrEnd\" ? \"change-form-input-error\" : \"change-form-input\",\n      \"aria-invalid\": errors.password ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-form-placeholder\",\n      children: t(\"my-account.personal-info.personal-password.new_password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = PasswordInput;\n\nconst PasswordConfirmInput = _ref2 => {\n  var _errors$passwordConfi, _errors$passwordConfi2, _errors$passwordConfi3;\n\n  let {\n    register,\n    emptyStringRegex,\n    watch,\n    validPasswordRegex,\n    errors\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n        required: true,\n        minLength: 8,\n        validate: {\n          emptyString: value => emptyStringRegex.test(value) ? false : true,\n          // ' ' //\n          passwordConfirm: value => value === watch('password') ? true : false,\n          validPassword: value => validPasswordRegex.test(value) ? true : false\n        }\n      }),\n      autoComplete: \"off\",\n      name: \"passwordConfirm\",\n      id: \"passwordConfirm\",\n      type: \"password\",\n      className: errors.password && (((_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.type) === \"minLength\" || ((_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.type) === \"required\" || ((_errors$passwordConfi3 = errors.passwordConfirm) === null || _errors$passwordConfi3 === void 0 ? void 0 : _errors$passwordConfi3.type) !== \"passwordConfirm\") ? \"change-form-input-error\" : \"change-form-input\",\n      \"aria-invalid\": errors.passwordConfirm ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-form-placeholder\",\n      children: t(\"my-account.personal-info.personal-password.confirm_new_password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = PasswordConfirmInput;\n\nconst PasswordErrors = _ref3 => {\n  var _errors$password4, _errors$password5, _errors$passwordConfi4, _errors$password6, _errors$password7, _errors$passwordConfi5, _errors$password8, _errors$passwordConfi6, _errors$passwordConfi7, _errors$passwordConfi8, _errors$password9;\n\n  let {\n    errors\n  } = _ref3;\n\n  if (((_errors$password4 = errors.password) === null || _errors$password4 === void 0 ? void 0 : _errors$password4.type) === \"required\" || ((_errors$password5 = errors.password) === null || _errors$password5 === void 0 ? void 0 : _errors$password5.type) === \"required\" && ((_errors$passwordConfi4 = errors.passwordConfirm) === null || _errors$passwordConfi4 === void 0 ? void 0 : _errors$passwordConfi4.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.password-errors.enter_password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password6 = errors.password) === null || _errors$password6 === void 0 ? void 0 : _errors$password6.type) !== \"validPassword\" && ((_errors$password7 = errors.password) === null || _errors$password7 === void 0 ? void 0 : _errors$password7.type) !== \"minLength\" && ((_errors$passwordConfi5 = errors.passwordConfirm) === null || _errors$passwordConfi5 === void 0 ? void 0 : _errors$passwordConfi5.type) === \"required\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.password-errors.confirm_password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password8 = errors.password) === null || _errors$password8 === void 0 ? void 0 : _errors$password8.type) !== \"validPassword\" && ((_errors$passwordConfi6 = errors.passwordConfirm) === null || _errors$passwordConfi6 === void 0 ? void 0 : _errors$passwordConfi6.type) !== \"required\" && (((_errors$passwordConfi7 = errors.passwordConfirm) === null || _errors$passwordConfi7 === void 0 ? void 0 : _errors$passwordConfi7.type) === \"passwordConfirm\" || ((_errors$passwordConfi8 = errors.passwordConfirm) === null || _errors$passwordConfi8 === void 0 ? void 0 : _errors$passwordConfi8.type) === \"minLength\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.password-errors.no_match\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  } else if (((_errors$password9 = errors.password) === null || _errors$password9 === void 0 ? void 0 : _errors$password9.type) === \"minLength\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidtext\",\n        children: t(\"sign-up.password-errors.8_characters\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c7 = PasswordErrors;\n\nconst Note = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"top-note\",\n  children: [t(\"my-account.personal-info.personal-password.note\"), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://support.google.com/accounts/answer/6304920\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"learn-more\",\n    children: t(\"my-account.personal-info.personal-password.why\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 279,\n  columnNumber: 3\n}, this);\n\n_c8 = Note;\n\nconst Buttons = _ref4 => {\n  let {\n    value,\n    password\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-button-row\",\n    children: [/*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      disabled: password === value.password,\n      children: t(\"save\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 3\n  }, this);\n};\n\n_c9 = Buttons;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Password\");\n$RefreshReg$(_c2, \"SubHeading\");\n$RefreshReg$(_c3, \"SubHeadNote\");\n$RefreshReg$(_c4, \"TopNote\");\n$RefreshReg$(_c5, \"PasswordInput\");\n$RefreshReg$(_c6, \"PasswordConfirmInput\");\n$RefreshReg$(_c7, \"PasswordErrors\");\n$RefreshReg$(_c8, \"Note\");\n$RefreshReg$(_c9, \"Buttons\");","map":{"version":3,"sources":["/home/roqa/Documents/Git/Google/src/pages/MyAccount/Password/index.jsx"],"names":["AccountHeader","axios","t","ErrorLogo","useForm","BackArrow","Cancel","useState","useContext","UserContext","Helmet","Password","setUser","obj","JSON","parse","localStorage","getItem","email","firstName","lastName","id","gender","month","day","year","password","URL","value","setValue","passwordConfirm","register","handleSubmit","watch","formState","errors","defaultValues","mode","reValidateMode","delayError","currentUser","response","get","data","onSubmit","method","url","headers","userObject","setItem","stringify","setTimeout","window","location","href","error","console","log","user","handleChange","e","target","name","validPasswordRegex","emptyStringRegex","noSpaceStartOrEndRegex","SubHeading","SubHeadNote","TopNote","PasswordInput","required","minLength","validate","emptyString","test","noSpaceStartOrEnd","validPassword","type","PasswordConfirmInput","PasswordErrors","Note","Buttons"],"mappings":"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","sourcesContent":["import AccountHeader from \"../../../components/MyAccount/Header\";\nimport axios from \"axios\";\nimport { t } from 'i18next';\nimport { ErrorLogo } from \"../../SignUp/Email\";\nimport { useForm } from \"react-hook-form\";\nimport { BackArrow, Cancel } from \"../Home\";\nimport { useState, useContext } from 'react';\nimport { UserContext } from \"../../../usercontext\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function Password() {\n  const { setUser } = useContext(UserContext);\n\n  const obj = JSON.parse(localStorage.getItem('user'));\n  const email = obj[0].email;\n  const firstName = obj[0].firstName;\n  const lastName = obj[0].lastName;\n  const id = obj[0].id;\n  const gender = obj[0].gender;\n  const month = obj[0].month;\n  const day = obj[0].day;\n  const year = obj[0].year;\n  const password = obj[0].password;\n  const URL = \"http://localhost:5000/users/\" + id;\n\n  const [value, setValue] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    gender: gender,\n    month: month,\n    day: day,\n    year: year,\n    password: password,\n    passwordConfirm: ''\n  })\n\n  const {register, handleSubmit, watch, formState: { errors }} = useForm({\n    defaultValues: {\n      password: '',\n      passwordConfirm: ''\n    },\n    mode: 'onSubmit',\n    reValidateMode: 'onChange',\n    delayError: 1000,\n  });\n\n  const currentUser = async () => {\n    let response = await axios.get(URL);\n    return response.data;\n  };\n\n  const onSubmit = async() => {\n    try {\n      await axios({\n        method: \"put\",\n        url: URL,\n        data: {\n          firstName: value.firstName,\n          lastName: value.lastName,\n          email: value.email,\n          gender: value.gender,\n          month: value.month,\n          day: value.day,\n          year: value.year,\n          password: value.password,\n        },\n        headers: { \"Content-Type\": \"application/json\"},\n      });\n      var userObject = []\n      userObject[0] = { \n        'firstName': value.firstName, \n        'lastName': value.lastName, \n        'email': value.email, \n        'gender': value.gender, \n        'month': value.month, \n        'day': value.day, \n        'year': value.year, \n        'password': value.password, \n        'id': id \n      }\n      localStorage.setItem(\"user\", JSON.stringify(userObject));\n      setTimeout(function () {\n        window.location.href = \"http://localhost:3000/myaccount/personalinfo/\";\n      }, 250);\n    } catch(error) {\n      console.log(error.response.data)\n    }\n    const user = await currentUser();\n    setUser(user);\n  }\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const validPasswordRegex =  /^(?=.*?[A-Z,a-z]).{8,}$/;\n  const emptyStringRegex = /^(?![\\s\\S])/; // '' //\n  const noSpaceStartOrEndRegex = /^[^\\s].+[^\\s]$/;\n\n  return (\n    <>\n      <Helmet>\n        <title>{t(\"my-account.personal-info.personal-password.password\")}</title>\n      </Helmet>\n      <AccountHeader />\n      <div className=\"form-bord-bot\" />\n      <section className=\"account-page-row-blue\">\n      <SubHeading />\n        <section className=\"account-flex-form-wrap\">\n          <SubHeadNote />\n          <section className=\"account-flex-form\">\n            <TopNote />\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\n              <PasswordInput\n                value={value}\n                handleChange={handleChange}\n                register={register}\n                errors={errors}\n                emptyStringRegex={emptyStringRegex}\n                noSpaceStartOrEndRegex={noSpaceStartOrEndRegex}\n                validPasswordRegex={validPasswordRegex}\n              />\n              <PasswordConfirmInput\n                value={value}\n                handleChange={handleChange}\n                register={register}\n                errors={errors}\n                emptyStringRegex={emptyStringRegex}\n                watch={watch}\n                validPasswordRegex={validPasswordRegex}\n              />\n              <PasswordErrors\n                errors={errors}\n              />\n              <Note />\n              <Buttons \n                value={value}\n                password={password}\n              />\n            </form>\n          </section>\n        </section>\n       </section>\n    </>\n  )\n}\n\nconst SubHeading = () => (\n  <div className=\"nav-contain-blue nav-contain-no-bord\">\n    <div className=\"navbar-form-wrap\">\n      <div className=\"account-subhead\">\n        <BackArrow />\n        <div className=\"account-subhead-text\">{t(\"my-account.personal-info.personal-password.password\")}</div>\n      </div>\n    </div>\n  </div>\n)\n\nconst SubHeadNote = () => (\n  <div className=\"top-note subhead-note font-16\">\n    {t(\"my-account.personal-info.personal-password.top_note\")}&nbsp;\n    <a href=\"https://support.google.com/accounts/answer/27442\" target=\"_blank\" rel=\"noreferrer\" className=\"learn-more\">\n      {t(\"more_information\")}\n    </a>\n  </div>\n)\n\nconst TopNote = () => (\n  <div className=\"top-note font-12 uppercase\">\n    {t(\"my-account.personal-info.personal-password.update_password\")}\n  </div>\n)\n\nconst PasswordInput = ({ register, emptyStringRegex, noSpaceStartOrEndRegex, validPasswordRegex, handleChange, errors }) => (\n  <div className=\"input-container\">\n    <input \n      {...register(\"password\", {\n        required: true,\n        minLength: 8,\n        validate: {\n          emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n          noSpaceStartOrEnd: (value) => noSpaceStartOrEndRegex.test(value) ? true : false,\n          validPassword: (value) => validPasswordRegex.test(value) ? true : false\n        }\n      })}\n      autoComplete=\"off\"\n      name=\"password\"\n      id=\"password\"\n      type=\"password\"\n      onChange={handleChange}\n      className={(\n        errors.password?.type === \"minLength\" ||\n        errors.password?.type === \"required\" ||\n        errors.password?.type === \"noSpaceStartOrEnd\")\n        ? \"change-form-input-error\" : \"change-form-input\"\n      }\n      aria-invalid={errors.password ? \"true\" : \"false\"}\n    />\n    <div className=\"change-form-placeholder\">\n      {t(\"my-account.personal-info.personal-password.new_password\")}\n    </div>\n  </div>\n)\n\nconst PasswordConfirmInput = ({ register, emptyStringRegex, watch, validPasswordRegex, errors }) => (\n  <div className=\"input-container\">\n    <input \n      {...register(\"passwordConfirm\", {\n        required: true,\n        minLength: 8,\n        validate: {\n          emptyString: (value) => emptyStringRegex.test(value) ? false : true, // ' ' //\n          passwordConfirm: (value) => value === watch('password') ? true : false,\n          validPassword: (value) => validPasswordRegex.test(value) ? true : false\n        }\n      })}\n      autoComplete=\"off\"\n      name=\"passwordConfirm\"\n      id=\"passwordConfirm\"\n      type=\"password\"\n      className={errors.password && (\n        errors.passwordConfirm?.type === \"minLength\" ||\n        errors.passwordConfirm?.type === \"required\" ||\n        errors.passwordConfirm?.type !== \"passwordConfirm\")\n        ? \"change-form-input-error\" : \"change-form-input\"\n      }\n      aria-invalid={errors.passwordConfirm ? \"true\" : \"false\"}\n    />\n    <div className=\"change-form-placeholder\">\n      {t(\"my-account.personal-info.personal-password.confirm_new_password\")}\n    </div>\n  </div>\n)\n\nconst PasswordErrors = ({ errors }) => {\n  if ((errors.password?.type === \"required\") || \n    (errors.password?.type === \"required\" && \n    errors.passwordConfirm?.type === \"required\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.password-errors.enter_password\")}</p>\n      </div>\n    )\n  } else if (errors.password?.type !== \"validPassword\" &&\n    errors.password?.type !== \"minLength\" &&\n    errors.passwordConfirm?.type === \"required\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.password-errors.confirm_password\")}</p>\n      </div>\n    )\n  } else if (errors.password?.type !== \"validPassword\" &&\n    errors.passwordConfirm?.type !== \"required\" && (\n    errors.passwordConfirm?.type === \"passwordConfirm\" ||\n    errors.passwordConfirm?.type === \"minLength\")) {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.password-errors.no_match\")}</p>\n      </div>\n    )\n  } else if (errors.password?.type === \"minLength\") {\n    return (\n      <div className=\"invalid\">\n        <ErrorLogo/>\n        <p className=\"invalidtext\">{t(\"sign-up.password-errors.8_characters\")}</p>\n      </div>\n    )\n  }\n}\n\nconst Note = () => (\n  <div className=\"top-note\">\n    {t(\"my-account.personal-info.personal-password.note\")}&nbsp;\n    <a href=\"https://support.google.com/accounts/answer/6304920\" target=\"_blank\" rel=\"noreferrer\" className=\"learn-more\">\n      {t(\"my-account.personal-info.personal-password.why\")}\n    </a>\n  </div>\n)\n\nconst Buttons = ({ value, password }) => (\n  <div className=\"form-button-row\">\n    <Cancel />\n    <button type=\"submit\" className=\"next\" disabled={ password === value.password }>\n      {t(\"save\")}\n    </button>\n  </div>\n)"]},"metadata":{},"sourceType":"module"}